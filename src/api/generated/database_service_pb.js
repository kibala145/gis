// source: database_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$swagger_options_annotations_pb = require('./protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
var project_service_pb = require('./project_service_pb.js');
goog.object.extend(proto, project_service_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.service.Attribute', null, global);
goog.exportSymbol('proto.service.AttributeRow', null, global);
goog.exportSymbol('proto.service.AttributeSearchColumn', null, global);
goog.exportSymbol('proto.service.AttributeSearchColumnHeader', null, global);
goog.exportSymbol('proto.service.AttributeSearchObject', null, global);
goog.exportSymbol('proto.service.AttributeSearchRequest', null, global);
goog.exportSymbol('proto.service.AttributeSearchResponse', null, global);
goog.exportSymbol('proto.service.BindAttributeAndGeometryRequest', null, global);
goog.exportSymbol('proto.service.BufferGeometryAroundWktRequest', null, global);
goog.exportSymbol('proto.service.BufferGeometryRequest', null, global);
goog.exportSymbol('proto.service.BufferGeometryResponse', null, global);
goog.exportSymbol('proto.service.DatabaseOperationRequest', null, global);
goog.exportSymbol('proto.service.DatabaseSelectOperationObject', null, global);
goog.exportSymbol('proto.service.DatabaseSelectOperationResponse', null, global);
goog.exportSymbol('proto.service.InfoClickColumn', null, global);
goog.exportSymbol('proto.service.InfoClickObject', null, global);
goog.exportSymbol('proto.service.InfoClickRequest', null, global);
goog.exportSymbol('proto.service.InfoClickResponse', null, global);
goog.exportSymbol('proto.service.InvokeMethodRequest', null, global);
goog.exportSymbol('proto.service.MethodType', null, global);
goog.exportSymbol('proto.service.ReferenceValuesRequest', null, global);
goog.exportSymbol('proto.service.SelectColumn', null, global);
goog.exportSymbol('proto.service.SpatialStatement', null, global);
goog.exportSymbol('proto.service.WhereStatement', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.AttributeSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.AttributeSearchRequest.repeatedFields_, null);
};
goog.inherits(proto.service.AttributeSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.AttributeSearchRequest.displayName = 'proto.service.AttributeSearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.SelectColumn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.SelectColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.SelectColumn.displayName = 'proto.service.SelectColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.WhereStatement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.WhereStatement.repeatedFields_, null);
};
goog.inherits(proto.service.WhereStatement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.WhereStatement.displayName = 'proto.service.WhereStatement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.SpatialStatement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.SpatialStatement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.SpatialStatement.displayName = 'proto.service.SpatialStatement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.AttributeSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.AttributeSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.service.AttributeSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.AttributeSearchResponse.displayName = 'proto.service.AttributeSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.AttributeSearchColumnHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.AttributeSearchColumnHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.AttributeSearchColumnHeader.displayName = 'proto.service.AttributeSearchColumnHeader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.AttributeSearchObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.AttributeSearchObject.repeatedFields_, null);
};
goog.inherits(proto.service.AttributeSearchObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.AttributeSearchObject.displayName = 'proto.service.AttributeSearchObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.AttributeSearchColumn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.AttributeSearchColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.AttributeSearchColumn.displayName = 'proto.service.AttributeSearchColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.InfoClickRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.InfoClickRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.InfoClickRequest.displayName = 'proto.service.InfoClickRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.InfoClickResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.InfoClickResponse.repeatedFields_, null);
};
goog.inherits(proto.service.InfoClickResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.InfoClickResponse.displayName = 'proto.service.InfoClickResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.InfoClickObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.InfoClickObject.repeatedFields_, null);
};
goog.inherits(proto.service.InfoClickObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.InfoClickObject.displayName = 'proto.service.InfoClickObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.InfoClickColumn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.InfoClickColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.InfoClickColumn.displayName = 'proto.service.InfoClickColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.BufferGeometryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.BufferGeometryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.BufferGeometryRequest.displayName = 'proto.service.BufferGeometryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.BufferGeometryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.BufferGeometryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.BufferGeometryResponse.displayName = 'proto.service.BufferGeometryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.BufferGeometryAroundWktRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.BufferGeometryAroundWktRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.BufferGeometryAroundWktRequest.displayName = 'proto.service.BufferGeometryAroundWktRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.InvokeMethodRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.InvokeMethodRequest.repeatedFields_, null);
};
goog.inherits(proto.service.InvokeMethodRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.InvokeMethodRequest.displayName = 'proto.service.InvokeMethodRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.DatabaseOperationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.DatabaseOperationRequest.repeatedFields_, null);
};
goog.inherits(proto.service.DatabaseOperationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.DatabaseOperationRequest.displayName = 'proto.service.DatabaseOperationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.AttributeRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.AttributeRow.repeatedFields_, null);
};
goog.inherits(proto.service.AttributeRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.AttributeRow.displayName = 'proto.service.AttributeRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.Attribute.displayName = 'proto.service.Attribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.DatabaseSelectOperationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.DatabaseSelectOperationResponse.repeatedFields_, null);
};
goog.inherits(proto.service.DatabaseSelectOperationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.DatabaseSelectOperationResponse.displayName = 'proto.service.DatabaseSelectOperationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.DatabaseSelectOperationObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.DatabaseSelectOperationObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.DatabaseSelectOperationObject.displayName = 'proto.service.DatabaseSelectOperationObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.BindAttributeAndGeometryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.BindAttributeAndGeometryRequest.repeatedFields_, null);
};
goog.inherits(proto.service.BindAttributeAndGeometryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.BindAttributeAndGeometryRequest.displayName = 'proto.service.BindAttributeAndGeometryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ReferenceValuesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ReferenceValuesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ReferenceValuesRequest.displayName = 'proto.service.ReferenceValuesRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.AttributeSearchRequest.repeatedFields_ = [16,17,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.AttributeSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.AttributeSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.AttributeSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    themeSrid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    inSrid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    outSrid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    attributeTable: jspb.Message.getFieldWithDefault(msg, 5, ""),
    attributeIdColumn: jspb.Message.getFieldWithDefault(msg, 6, ""),
    attributeLinkGeometryColumn: jspb.Message.getFieldWithDefault(msg, 7, ""),
    geometryTable: jspb.Message.getFieldWithDefault(msg, 8, ""),
    geometryIdColumn: jspb.Message.getFieldWithDefault(msg, 9, ""),
    geometryColumn: jspb.Message.getFieldWithDefault(msg, 10, ""),
    linkTable: jspb.Message.getFieldWithDefault(msg, 11, ""),
    linkTableGeometryIdColumn: jspb.Message.getFieldWithDefault(msg, 12, ""),
    linkTableAttributeIdColumn: jspb.Message.getFieldWithDefault(msg, 13, ""),
    withGeometry: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    rowLimit: jspb.Message.getFieldWithDefault(msg, 15, ""),
    selectColumnsList: jspb.Message.toObjectList(msg.getSelectColumnsList(),
    proto.service.SelectColumn.toObject, includeInstance),
    whereStatementsList: jspb.Message.toObjectList(msg.getWhereStatementsList(),
    proto.service.WhereStatement.toObject, includeInstance),
    spatialStatementsList: jspb.Message.toObjectList(msg.getSpatialStatementsList(),
    proto.service.SpatialStatement.toObject, includeInstance),
    themeId: jspb.Message.getFieldWithDefault(msg, 19, ""),
    themeName: jspb.Message.getFieldWithDefault(msg, 20, ""),
    themeLabel: jspb.Message.getFieldWithDefault(msg, 21, ""),
    themeIsExportable: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.AttributeSearchRequest}
 */
proto.service.AttributeSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.AttributeSearchRequest;
  return proto.service.AttributeSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.AttributeSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.AttributeSearchRequest}
 */
proto.service.AttributeSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeSrid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInSrid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutSrid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeTable(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeIdColumn(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeLinkGeometryColumn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryTable(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryIdColumn(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryColumn(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTable(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTableGeometryIdColumn(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTableAttributeIdColumn(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithGeometry(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setRowLimit(value);
      break;
    case 16:
      var value = new proto.service.SelectColumn;
      reader.readMessage(value,proto.service.SelectColumn.deserializeBinaryFromReader);
      msg.addSelectColumns(value);
      break;
    case 17:
      var value = new proto.service.WhereStatement;
      reader.readMessage(value,proto.service.WhereStatement.deserializeBinaryFromReader);
      msg.addWhereStatements(value);
      break;
    case 18:
      var value = new proto.service.SpatialStatement;
      reader.readMessage(value,proto.service.SpatialStatement.deserializeBinaryFromReader);
      msg.addSpatialStatements(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeName(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeLabel(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeIsExportable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.AttributeSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.AttributeSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.AttributeSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeSrid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInSrid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOutSrid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAttributeTable();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAttributeIdColumn();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAttributeLinkGeometryColumn();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGeometryTable();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getGeometryIdColumn();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getGeometryColumn();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLinkTable();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLinkTableGeometryIdColumn();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLinkTableAttributeIdColumn();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getWithGeometry();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getRowLimit();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSelectColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.service.SelectColumn.serializeBinaryToWriter
    );
  }
  f = message.getWhereStatementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.service.WhereStatement.serializeBinaryToWriter
    );
  }
  f = message.getSpatialStatementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.service.SpatialStatement.serializeBinaryToWriter
    );
  }
  f = message.getThemeId();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getThemeName();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getThemeLabel();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getThemeIsExportable();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string data_source = 1;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_srid = 2;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getThemeSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setThemeSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string in_srid = 3;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getInSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setInSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string out_srid = 4;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getOutSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setOutSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string attribute_table = 5;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getAttributeTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setAttributeTable = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string attribute_id_column = 6;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getAttributeIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setAttributeIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string attribute_link_geometry_column = 7;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getAttributeLinkGeometryColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setAttributeLinkGeometryColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string geometry_table = 8;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getGeometryTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setGeometryTable = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string geometry_id_column = 9;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getGeometryIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setGeometryIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string geometry_column = 10;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getGeometryColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setGeometryColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string link_table = 11;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getLinkTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setLinkTable = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string link_table_geometry_id_column = 12;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getLinkTableGeometryIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setLinkTableGeometryIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string link_table_attribute_id_column = 13;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getLinkTableAttributeIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setLinkTableAttributeIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool with_geometry = 14;
 * @return {boolean}
 */
proto.service.AttributeSearchRequest.prototype.getWithGeometry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setWithGeometry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string row_limit = 15;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getRowLimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setRowLimit = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * repeated SelectColumn select_columns = 16;
 * @return {!Array<!proto.service.SelectColumn>}
 */
proto.service.AttributeSearchRequest.prototype.getSelectColumnsList = function() {
  return /** @type{!Array<!proto.service.SelectColumn>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.SelectColumn, 16));
};


/**
 * @param {!Array<!proto.service.SelectColumn>} value
 * @return {!proto.service.AttributeSearchRequest} returns this
*/
proto.service.AttributeSearchRequest.prototype.setSelectColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.service.SelectColumn=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.SelectColumn}
 */
proto.service.AttributeSearchRequest.prototype.addSelectColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.service.SelectColumn, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.clearSelectColumnsList = function() {
  return this.setSelectColumnsList([]);
};


/**
 * repeated WhereStatement where_statements = 17;
 * @return {!Array<!proto.service.WhereStatement>}
 */
proto.service.AttributeSearchRequest.prototype.getWhereStatementsList = function() {
  return /** @type{!Array<!proto.service.WhereStatement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.WhereStatement, 17));
};


/**
 * @param {!Array<!proto.service.WhereStatement>} value
 * @return {!proto.service.AttributeSearchRequest} returns this
*/
proto.service.AttributeSearchRequest.prototype.setWhereStatementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.service.WhereStatement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.WhereStatement}
 */
proto.service.AttributeSearchRequest.prototype.addWhereStatements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.service.WhereStatement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.clearWhereStatementsList = function() {
  return this.setWhereStatementsList([]);
};


/**
 * repeated SpatialStatement spatial_statements = 18;
 * @return {!Array<!proto.service.SpatialStatement>}
 */
proto.service.AttributeSearchRequest.prototype.getSpatialStatementsList = function() {
  return /** @type{!Array<!proto.service.SpatialStatement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.SpatialStatement, 18));
};


/**
 * @param {!Array<!proto.service.SpatialStatement>} value
 * @return {!proto.service.AttributeSearchRequest} returns this
*/
proto.service.AttributeSearchRequest.prototype.setSpatialStatementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.service.SpatialStatement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.SpatialStatement}
 */
proto.service.AttributeSearchRequest.prototype.addSpatialStatements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.service.SpatialStatement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.clearSpatialStatementsList = function() {
  return this.setSpatialStatementsList([]);
};


/**
 * optional string theme_id = 19;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getThemeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setThemeId = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string theme_name = 20;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getThemeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setThemeName = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string theme_label = 21;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getThemeLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setThemeLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string theme_is_exportable = 22;
 * @return {string}
 */
proto.service.AttributeSearchRequest.prototype.getThemeIsExportable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchRequest} returns this
 */
proto.service.AttributeSearchRequest.prototype.setThemeIsExportable = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.SelectColumn.prototype.toObject = function(opt_includeInstance) {
  return proto.service.SelectColumn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.SelectColumn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SelectColumn.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    controlType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    referenceTable: jspb.Message.getFieldWithDefault(msg, 6, ""),
    referenceJoinColumn: jspb.Message.getFieldWithDefault(msg, 7, ""),
    referenceSelectColumn: jspb.Message.getFieldWithDefault(msg, 8, ""),
    aggregateFunction: jspb.Message.getFieldWithDefault(msg, 9, ""),
    pos: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.SelectColumn}
 */
proto.service.SelectColumn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.SelectColumn;
  return proto.service.SelectColumn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.SelectColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.SelectColumn}
 */
proto.service.SelectColumn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceTable(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceJoinColumn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceSelectColumn(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAggregateFunction(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.SelectColumn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.SelectColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.SelectColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SelectColumn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getControlType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReferenceTable();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReferenceJoinColumn();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReferenceSelectColumn();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAggregateFunction();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPos();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string control_type = 5;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getControlType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setControlType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string reference_table = 6;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getReferenceTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setReferenceTable = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string reference_join_column = 7;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getReferenceJoinColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setReferenceJoinColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string reference_select_column = 8;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getReferenceSelectColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setReferenceSelectColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string aggregate_function = 9;
 * @return {string}
 */
proto.service.SelectColumn.prototype.getAggregateFunction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setAggregateFunction = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 pos = 10;
 * @return {number}
 */
proto.service.SelectColumn.prototype.getPos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.SelectColumn} returns this
 */
proto.service.SelectColumn.prototype.setPos = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.WhereStatement.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.WhereStatement.prototype.toObject = function(opt_includeInstance) {
  return proto.service.WhereStatement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.WhereStatement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.WhereStatement.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 3, ""),
    valueList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    logicalStatement: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.WhereStatement}
 */
proto.service.WhereStatement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.WhereStatement;
  return proto.service.WhereStatement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.WhereStatement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.WhereStatement}
 */
proto.service.WhereStatement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogicalStatement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.WhereStatement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.WhereStatement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.WhereStatement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.WhereStatement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperator();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getLogicalStatement();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.service.WhereStatement.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.WhereStatement} returns this
 */
proto.service.WhereStatement.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.service.WhereStatement.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.WhereStatement} returns this
 */
proto.service.WhereStatement.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string operator = 3;
 * @return {string}
 */
proto.service.WhereStatement.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.WhereStatement} returns this
 */
proto.service.WhereStatement.prototype.setOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string value = 4;
 * @return {!Array<string>}
 */
proto.service.WhereStatement.prototype.getValueList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.service.WhereStatement} returns this
 */
proto.service.WhereStatement.prototype.setValueList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.service.WhereStatement} returns this
 */
proto.service.WhereStatement.prototype.addValue = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.WhereStatement} returns this
 */
proto.service.WhereStatement.prototype.clearValueList = function() {
  return this.setValueList([]);
};


/**
 * optional string logical_statement = 5;
 * @return {string}
 */
proto.service.WhereStatement.prototype.getLogicalStatement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.WhereStatement} returns this
 */
proto.service.WhereStatement.prototype.setLogicalStatement = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.SpatialStatement.prototype.toObject = function(opt_includeInstance) {
  return proto.service.SpatialStatement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.SpatialStatement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SpatialStatement.toObject = function(includeInstance, msg) {
  var f, obj = {
    wktGeometry: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rowLimit: jspb.Message.getFieldWithDefault(msg, 2, ""),
    distance: jspb.Message.getFieldWithDefault(msg, 3, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 4, ""),
    layerSrid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.SpatialStatement}
 */
proto.service.SpatialStatement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.SpatialStatement;
  return proto.service.SpatialStatement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.SpatialStatement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.SpatialStatement}
 */
proto.service.SpatialStatement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWktGeometry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRowLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistance(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLayerSrid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.SpatialStatement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.SpatialStatement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.SpatialStatement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SpatialStatement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWktGeometry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRowLimit();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDistance();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOperator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLayerSrid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string wkt_geometry = 1;
 * @return {string}
 */
proto.service.SpatialStatement.prototype.getWktGeometry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialStatement} returns this
 */
proto.service.SpatialStatement.prototype.setWktGeometry = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string row_limit = 2;
 * @return {string}
 */
proto.service.SpatialStatement.prototype.getRowLimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialStatement} returns this
 */
proto.service.SpatialStatement.prototype.setRowLimit = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string distance = 3;
 * @return {string}
 */
proto.service.SpatialStatement.prototype.getDistance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialStatement} returns this
 */
proto.service.SpatialStatement.prototype.setDistance = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string operator = 4;
 * @return {string}
 */
proto.service.SpatialStatement.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialStatement} returns this
 */
proto.service.SpatialStatement.prototype.setOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string layer_srid = 5;
 * @return {string}
 */
proto.service.SpatialStatement.prototype.getLayerSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialStatement} returns this
 */
proto.service.SpatialStatement.prototype.setLayerSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.AttributeSearchResponse.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.AttributeSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.service.AttributeSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.AttributeSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    themeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    themeLabel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    themeName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    themeIsExportable: jspb.Message.getFieldWithDefault(msg, 4, ""),
    columnHeadersList: jspb.Message.toObjectList(msg.getColumnHeadersList(),
    proto.service.AttributeSearchColumnHeader.toObject, includeInstance),
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.service.AttributeSearchObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.AttributeSearchResponse}
 */
proto.service.AttributeSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.AttributeSearchResponse;
  return proto.service.AttributeSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.AttributeSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.AttributeSearchResponse}
 */
proto.service.AttributeSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeIsExportable(value);
      break;
    case 5:
      var value = new proto.service.AttributeSearchColumnHeader;
      reader.readMessage(value,proto.service.AttributeSearchColumnHeader.deserializeBinaryFromReader);
      msg.addColumnHeaders(value);
      break;
    case 6:
      var value = new proto.service.AttributeSearchObject;
      reader.readMessage(value,proto.service.AttributeSearchObject.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.AttributeSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.AttributeSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.AttributeSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThemeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThemeName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getThemeIsExportable();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getColumnHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.service.AttributeSearchColumnHeader.serializeBinaryToWriter
    );
  }
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.service.AttributeSearchObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional string theme_id = 1;
 * @return {string}
 */
proto.service.AttributeSearchResponse.prototype.getThemeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchResponse} returns this
 */
proto.service.AttributeSearchResponse.prototype.setThemeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_label = 2;
 * @return {string}
 */
proto.service.AttributeSearchResponse.prototype.getThemeLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchResponse} returns this
 */
proto.service.AttributeSearchResponse.prototype.setThemeLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string theme_name = 3;
 * @return {string}
 */
proto.service.AttributeSearchResponse.prototype.getThemeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchResponse} returns this
 */
proto.service.AttributeSearchResponse.prototype.setThemeName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string theme_is_exportable = 4;
 * @return {string}
 */
proto.service.AttributeSearchResponse.prototype.getThemeIsExportable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchResponse} returns this
 */
proto.service.AttributeSearchResponse.prototype.setThemeIsExportable = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated AttributeSearchColumnHeader column_headers = 5;
 * @return {!Array<!proto.service.AttributeSearchColumnHeader>}
 */
proto.service.AttributeSearchResponse.prototype.getColumnHeadersList = function() {
  return /** @type{!Array<!proto.service.AttributeSearchColumnHeader>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.AttributeSearchColumnHeader, 5));
};


/**
 * @param {!Array<!proto.service.AttributeSearchColumnHeader>} value
 * @return {!proto.service.AttributeSearchResponse} returns this
*/
proto.service.AttributeSearchResponse.prototype.setColumnHeadersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.service.AttributeSearchColumnHeader=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.AttributeSearchColumnHeader}
 */
proto.service.AttributeSearchResponse.prototype.addColumnHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.service.AttributeSearchColumnHeader, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.AttributeSearchResponse} returns this
 */
proto.service.AttributeSearchResponse.prototype.clearColumnHeadersList = function() {
  return this.setColumnHeadersList([]);
};


/**
 * repeated AttributeSearchObject objects = 6;
 * @return {!Array<!proto.service.AttributeSearchObject>}
 */
proto.service.AttributeSearchResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.service.AttributeSearchObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.AttributeSearchObject, 6));
};


/**
 * @param {!Array<!proto.service.AttributeSearchObject>} value
 * @return {!proto.service.AttributeSearchResponse} returns this
*/
proto.service.AttributeSearchResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.service.AttributeSearchObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.AttributeSearchObject}
 */
proto.service.AttributeSearchResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.service.AttributeSearchObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.AttributeSearchResponse} returns this
 */
proto.service.AttributeSearchResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.AttributeSearchColumnHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.service.AttributeSearchColumnHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.AttributeSearchColumnHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchColumnHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.AttributeSearchColumnHeader}
 */
proto.service.AttributeSearchColumnHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.AttributeSearchColumnHeader;
  return proto.service.AttributeSearchColumnHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.AttributeSearchColumnHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.AttributeSearchColumnHeader}
 */
proto.service.AttributeSearchColumnHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.AttributeSearchColumnHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.AttributeSearchColumnHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.AttributeSearchColumnHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchColumnHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.service.AttributeSearchColumnHeader.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchColumnHeader} returns this
 */
proto.service.AttributeSearchColumnHeader.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.service.AttributeSearchColumnHeader.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchColumnHeader} returns this
 */
proto.service.AttributeSearchColumnHeader.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.AttributeSearchObject.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.AttributeSearchObject.prototype.toObject = function(opt_includeInstance) {
  return proto.service.AttributeSearchObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.AttributeSearchObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    geometryId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attributeId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    wktGeometry: jspb.Message.getFieldWithDefault(msg, 4, ""),
    distance: jspb.Message.getFieldWithDefault(msg, 5, ""),
    themeId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.service.AttributeSearchColumn.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.AttributeSearchObject}
 */
proto.service.AttributeSearchObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.AttributeSearchObject;
  return proto.service.AttributeSearchObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.AttributeSearchObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.AttributeSearchObject}
 */
proto.service.AttributeSearchObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWktGeometry(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistance(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeId(value);
      break;
    case 7:
      var value = new proto.service.AttributeSearchColumn;
      reader.readMessage(value,proto.service.AttributeSearchColumn.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.AttributeSearchObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.AttributeSearchObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.AttributeSearchObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGeometryId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttributeId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWktGeometry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDistance();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getThemeId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.service.AttributeSearchColumn.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.AttributeSearchObject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchObject} returns this
 */
proto.service.AttributeSearchObject.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string geometry_id = 2;
 * @return {string}
 */
proto.service.AttributeSearchObject.prototype.getGeometryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchObject} returns this
 */
proto.service.AttributeSearchObject.prototype.setGeometryId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string attribute_id = 3;
 * @return {string}
 */
proto.service.AttributeSearchObject.prototype.getAttributeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchObject} returns this
 */
proto.service.AttributeSearchObject.prototype.setAttributeId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string wkt_geometry = 4;
 * @return {string}
 */
proto.service.AttributeSearchObject.prototype.getWktGeometry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchObject} returns this
 */
proto.service.AttributeSearchObject.prototype.setWktGeometry = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string distance = 5;
 * @return {string}
 */
proto.service.AttributeSearchObject.prototype.getDistance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchObject} returns this
 */
proto.service.AttributeSearchObject.prototype.setDistance = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string theme_id = 6;
 * @return {string}
 */
proto.service.AttributeSearchObject.prototype.getThemeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchObject} returns this
 */
proto.service.AttributeSearchObject.prototype.setThemeId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated AttributeSearchColumn columns = 7;
 * @return {!Array<!proto.service.AttributeSearchColumn>}
 */
proto.service.AttributeSearchObject.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.service.AttributeSearchColumn>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.AttributeSearchColumn, 7));
};


/**
 * @param {!Array<!proto.service.AttributeSearchColumn>} value
 * @return {!proto.service.AttributeSearchObject} returns this
*/
proto.service.AttributeSearchObject.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.service.AttributeSearchColumn=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.AttributeSearchColumn}
 */
proto.service.AttributeSearchObject.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.service.AttributeSearchColumn, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.AttributeSearchObject} returns this
 */
proto.service.AttributeSearchObject.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.AttributeSearchColumn.prototype.toObject = function(opt_includeInstance) {
  return proto.service.AttributeSearchColumn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.AttributeSearchColumn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchColumn.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    controlType: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.AttributeSearchColumn}
 */
proto.service.AttributeSearchColumn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.AttributeSearchColumn;
  return proto.service.AttributeSearchColumn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.AttributeSearchColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.AttributeSearchColumn}
 */
proto.service.AttributeSearchColumn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.AttributeSearchColumn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.AttributeSearchColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.AttributeSearchColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeSearchColumn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getControlType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.service.AttributeSearchColumn.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchColumn} returns this
 */
proto.service.AttributeSearchColumn.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.AttributeSearchColumn.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchColumn} returns this
 */
proto.service.AttributeSearchColumn.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.service.AttributeSearchColumn.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchColumn} returns this
 */
proto.service.AttributeSearchColumn.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string control_type = 4;
 * @return {string}
 */
proto.service.AttributeSearchColumn.prototype.getControlType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.AttributeSearchColumn} returns this
 */
proto.service.AttributeSearchColumn.prototype.setControlType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.InfoClickRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.InfoClickRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.InfoClickRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clickLat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    clickLng: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    projectId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    themeId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    outSrid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    inSrid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    radius: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.InfoClickRequest}
 */
proto.service.InfoClickRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.InfoClickRequest;
  return proto.service.InfoClickRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.InfoClickRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.InfoClickRequest}
 */
proto.service.InfoClickRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClickLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClickLng(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutSrid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInSrid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRadius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.InfoClickRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.InfoClickRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.InfoClickRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClickLat();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getClickLng();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getThemeId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOutSrid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInSrid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRadius();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional double click_lat = 1;
 * @return {number}
 */
proto.service.InfoClickRequest.prototype.getClickLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.InfoClickRequest} returns this
 */
proto.service.InfoClickRequest.prototype.setClickLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double click_lng = 2;
 * @return {number}
 */
proto.service.InfoClickRequest.prototype.getClickLng = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.InfoClickRequest} returns this
 */
proto.service.InfoClickRequest.prototype.setClickLng = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string project_id = 3;
 * @return {string}
 */
proto.service.InfoClickRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickRequest} returns this
 */
proto.service.InfoClickRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string theme_id = 4;
 * @return {string}
 */
proto.service.InfoClickRequest.prototype.getThemeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickRequest} returns this
 */
proto.service.InfoClickRequest.prototype.setThemeId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string out_srid = 5;
 * @return {string}
 */
proto.service.InfoClickRequest.prototype.getOutSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickRequest} returns this
 */
proto.service.InfoClickRequest.prototype.setOutSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string in_srid = 6;
 * @return {string}
 */
proto.service.InfoClickRequest.prototype.getInSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickRequest} returns this
 */
proto.service.InfoClickRequest.prototype.setInSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 radius = 7;
 * @return {number}
 */
proto.service.InfoClickRequest.prototype.getRadius = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.InfoClickRequest} returns this
 */
proto.service.InfoClickRequest.prototype.setRadius = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.InfoClickResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.InfoClickResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.service.InfoClickResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.InfoClickResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.service.InfoClickObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.InfoClickResponse}
 */
proto.service.InfoClickResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.InfoClickResponse;
  return proto.service.InfoClickResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.InfoClickResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.InfoClickResponse}
 */
proto.service.InfoClickResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.InfoClickObject;
      reader.readMessage(value,proto.service.InfoClickObject.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.InfoClickResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.InfoClickResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.InfoClickResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.service.InfoClickObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InfoClickObject objects = 1;
 * @return {!Array<!proto.service.InfoClickObject>}
 */
proto.service.InfoClickResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.service.InfoClickObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.InfoClickObject, 1));
};


/**
 * @param {!Array<!proto.service.InfoClickObject>} value
 * @return {!proto.service.InfoClickResponse} returns this
*/
proto.service.InfoClickResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.service.InfoClickObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.InfoClickObject}
 */
proto.service.InfoClickResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.service.InfoClickObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.InfoClickResponse} returns this
 */
proto.service.InfoClickResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.InfoClickObject.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.InfoClickObject.prototype.toObject = function(opt_includeInstance) {
  return proto.service.InfoClickObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.InfoClickObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    themeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    themeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    themeGroupName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    themeIsEditable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    themeIsExportable: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    themeDataSource: jspb.Message.getFieldWithDefault(msg, 6, ""),
    themeGeometryId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    themeAttributeId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    themeWktGeometry: jspb.Message.getFieldWithDefault(msg, 9, ""),
    themePortalActionsList: jspb.Message.toObjectList(msg.getThemePortalActionsList(),
    project_service_pb.PortalAction.toObject, includeInstance),
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.service.InfoClickColumn.toObject, includeInstance),
    clickLng: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    clickLat: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    outSrid: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.InfoClickObject}
 */
proto.service.InfoClickObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.InfoClickObject;
  return proto.service.InfoClickObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.InfoClickObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.InfoClickObject}
 */
proto.service.InfoClickObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeGroupName(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThemeIsEditable(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThemeIsExportable(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeDataSource(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeGeometryId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeAttributeId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeWktGeometry(value);
      break;
    case 10:
      var value = new project_service_pb.PortalAction;
      reader.readMessage(value,project_service_pb.PortalAction.deserializeBinaryFromReader);
      msg.addThemePortalActions(value);
      break;
    case 11:
      var value = new proto.service.InfoClickColumn;
      reader.readMessage(value,proto.service.InfoClickColumn.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClickLng(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClickLat(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutSrid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.InfoClickObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.InfoClickObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.InfoClickObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThemeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThemeGroupName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getThemeIsEditable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getThemeIsExportable();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getThemeDataSource();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getThemeGeometryId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getThemeAttributeId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getThemeWktGeometry();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getThemePortalActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      project_service_pb.PortalAction.serializeBinaryToWriter
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.service.InfoClickColumn.serializeBinaryToWriter
    );
  }
  f = message.getClickLng();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getClickLat();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getOutSrid();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string theme_id = 1;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getThemeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_name = 2;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getThemeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string theme_group_name = 3;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getThemeGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool theme_is_editable = 4;
 * @return {boolean}
 */
proto.service.InfoClickObject.prototype.getThemeIsEditable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeIsEditable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool theme_is_exportable = 5;
 * @return {boolean}
 */
proto.service.InfoClickObject.prototype.getThemeIsExportable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeIsExportable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string theme_data_source = 6;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getThemeDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string theme_geometry_id = 7;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getThemeGeometryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeGeometryId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string theme_attribute_id = 8;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getThemeAttributeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeAttributeId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string theme_wkt_geometry = 9;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getThemeWktGeometry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setThemeWktGeometry = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated PortalAction theme_portal_actions = 10;
 * @return {!Array<!proto.service.PortalAction>}
 */
proto.service.InfoClickObject.prototype.getThemePortalActionsList = function() {
  return /** @type{!Array<!proto.service.PortalAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, project_service_pb.PortalAction, 10));
};


/**
 * @param {!Array<!proto.service.PortalAction>} value
 * @return {!proto.service.InfoClickObject} returns this
*/
proto.service.InfoClickObject.prototype.setThemePortalActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.service.PortalAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.PortalAction}
 */
proto.service.InfoClickObject.prototype.addThemePortalActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.service.PortalAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.clearThemePortalActionsList = function() {
  return this.setThemePortalActionsList([]);
};


/**
 * repeated InfoClickColumn columns = 11;
 * @return {!Array<!proto.service.InfoClickColumn>}
 */
proto.service.InfoClickObject.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.service.InfoClickColumn>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.InfoClickColumn, 11));
};


/**
 * @param {!Array<!proto.service.InfoClickColumn>} value
 * @return {!proto.service.InfoClickObject} returns this
*/
proto.service.InfoClickObject.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.service.InfoClickColumn=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.InfoClickColumn}
 */
proto.service.InfoClickObject.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.service.InfoClickColumn, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * optional double click_lng = 12;
 * @return {number}
 */
proto.service.InfoClickObject.prototype.getClickLng = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setClickLng = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double click_lat = 13;
 * @return {number}
 */
proto.service.InfoClickObject.prototype.getClickLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setClickLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string out_srid = 14;
 * @return {string}
 */
proto.service.InfoClickObject.prototype.getOutSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickObject} returns this
 */
proto.service.InfoClickObject.prototype.setOutSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.InfoClickColumn.prototype.toObject = function(opt_includeInstance) {
  return proto.service.InfoClickColumn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.InfoClickColumn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickColumn.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    controlType: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.InfoClickColumn}
 */
proto.service.InfoClickColumn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.InfoClickColumn;
  return proto.service.InfoClickColumn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.InfoClickColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.InfoClickColumn}
 */
proto.service.InfoClickColumn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.InfoClickColumn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.InfoClickColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.InfoClickColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InfoClickColumn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getControlType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.service.InfoClickColumn.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickColumn} returns this
 */
proto.service.InfoClickColumn.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.InfoClickColumn.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickColumn} returns this
 */
proto.service.InfoClickColumn.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.service.InfoClickColumn.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickColumn} returns this
 */
proto.service.InfoClickColumn.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string control_type = 4;
 * @return {string}
 */
proto.service.InfoClickColumn.prototype.getControlType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InfoClickColumn} returns this
 */
proto.service.InfoClickColumn.prototype.setControlType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.BufferGeometryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.BufferGeometryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.BufferGeometryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BufferGeometryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    geometryTable: jspb.Message.getFieldWithDefault(msg, 2, ""),
    geometryColumn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attributeColumn: jspb.Message.getFieldWithDefault(msg, 4, ""),
    attributeValue: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bufferDistance: jspb.Message.getFieldWithDefault(msg, 6, ""),
    geometryDimension: jspb.Message.getFieldWithDefault(msg, 7, 0),
    themeSrid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    outSrid: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.BufferGeometryRequest}
 */
proto.service.BufferGeometryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.BufferGeometryRequest;
  return proto.service.BufferGeometryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.BufferGeometryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.BufferGeometryRequest}
 */
proto.service.BufferGeometryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryColumn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeColumn(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeValue(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBufferDistance(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGeometryDimension(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeSrid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutSrid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.BufferGeometryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.BufferGeometryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.BufferGeometryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BufferGeometryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGeometryTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGeometryColumn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttributeColumn();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAttributeValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBufferDistance();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGeometryDimension();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getThemeSrid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOutSrid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string data_source = 1;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string geometry_table = 2;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getGeometryTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setGeometryTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string geometry_column = 3;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getGeometryColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setGeometryColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string attribute_column = 4;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getAttributeColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setAttributeColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string attribute_value = 5;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getAttributeValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setAttributeValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string buffer_distance = 6;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getBufferDistance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setBufferDistance = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 geometry_dimension = 7;
 * @return {number}
 */
proto.service.BufferGeometryRequest.prototype.getGeometryDimension = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setGeometryDimension = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string theme_srid = 8;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getThemeSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setThemeSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string out_srid = 9;
 * @return {string}
 */
proto.service.BufferGeometryRequest.prototype.getOutSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryRequest} returns this
 */
proto.service.BufferGeometryRequest.prototype.setOutSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.BufferGeometryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.service.BufferGeometryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.BufferGeometryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BufferGeometryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    wktGeometry: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.BufferGeometryResponse}
 */
proto.service.BufferGeometryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.BufferGeometryResponse;
  return proto.service.BufferGeometryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.BufferGeometryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.BufferGeometryResponse}
 */
proto.service.BufferGeometryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWktGeometry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.BufferGeometryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.BufferGeometryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.BufferGeometryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BufferGeometryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWktGeometry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string wkt_geometry = 1;
 * @return {string}
 */
proto.service.BufferGeometryResponse.prototype.getWktGeometry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryResponse} returns this
 */
proto.service.BufferGeometryResponse.prototype.setWktGeometry = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.BufferGeometryAroundWktRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.BufferGeometryAroundWktRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.BufferGeometryAroundWktRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BufferGeometryAroundWktRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wktGeometry: jspb.Message.getFieldWithDefault(msg, 1, ""),
    distance: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataSource: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.BufferGeometryAroundWktRequest}
 */
proto.service.BufferGeometryAroundWktRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.BufferGeometryAroundWktRequest;
  return proto.service.BufferGeometryAroundWktRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.BufferGeometryAroundWktRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.BufferGeometryAroundWktRequest}
 */
proto.service.BufferGeometryAroundWktRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWktGeometry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.BufferGeometryAroundWktRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.BufferGeometryAroundWktRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.BufferGeometryAroundWktRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BufferGeometryAroundWktRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWktGeometry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDistance();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string wkt_geometry = 1;
 * @return {string}
 */
proto.service.BufferGeometryAroundWktRequest.prototype.getWktGeometry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryAroundWktRequest} returns this
 */
proto.service.BufferGeometryAroundWktRequest.prototype.setWktGeometry = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string distance = 2;
 * @return {string}
 */
proto.service.BufferGeometryAroundWktRequest.prototype.getDistance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryAroundWktRequest} returns this
 */
proto.service.BufferGeometryAroundWktRequest.prototype.setDistance = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string data_source = 3;
 * @return {string}
 */
proto.service.BufferGeometryAroundWktRequest.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BufferGeometryAroundWktRequest} returns this
 */
proto.service.BufferGeometryAroundWktRequest.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.InvokeMethodRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.InvokeMethodRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.InvokeMethodRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.InvokeMethodRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InvokeMethodRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    methodName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    methodType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dataSource: jspb.Message.getFieldWithDefault(msg, 3, ""),
    methodParametersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.InvokeMethodRequest}
 */
proto.service.InvokeMethodRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.InvokeMethodRequest;
  return proto.service.InvokeMethodRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.InvokeMethodRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.InvokeMethodRequest}
 */
proto.service.InvokeMethodRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodName(value);
      break;
    case 2:
      var value = /** @type {!proto.service.MethodType} */ (reader.readEnum());
      msg.setMethodType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMethodParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.InvokeMethodRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.InvokeMethodRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.InvokeMethodRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.InvokeMethodRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethodName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethodType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMethodParametersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string method_name = 1;
 * @return {string}
 */
proto.service.InvokeMethodRequest.prototype.getMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InvokeMethodRequest} returns this
 */
proto.service.InvokeMethodRequest.prototype.setMethodName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MethodType method_type = 2;
 * @return {!proto.service.MethodType}
 */
proto.service.InvokeMethodRequest.prototype.getMethodType = function() {
  return /** @type {!proto.service.MethodType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.service.MethodType} value
 * @return {!proto.service.InvokeMethodRequest} returns this
 */
proto.service.InvokeMethodRequest.prototype.setMethodType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string data_source = 3;
 * @return {string}
 */
proto.service.InvokeMethodRequest.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.InvokeMethodRequest} returns this
 */
proto.service.InvokeMethodRequest.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string method_parameters = 4;
 * @return {!Array<string>}
 */
proto.service.InvokeMethodRequest.prototype.getMethodParametersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.service.InvokeMethodRequest} returns this
 */
proto.service.InvokeMethodRequest.prototype.setMethodParametersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.service.InvokeMethodRequest} returns this
 */
proto.service.InvokeMethodRequest.prototype.addMethodParameters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.InvokeMethodRequest} returns this
 */
proto.service.InvokeMethodRequest.prototype.clearMethodParametersList = function() {
  return this.setMethodParametersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.DatabaseOperationRequest.repeatedFields_ = [15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.DatabaseOperationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.DatabaseOperationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.DatabaseOperationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.DatabaseOperationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    table: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sequencer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    operation: jspb.Message.getFieldWithDefault(msg, 4, ""),
    primaryKey: jspb.Message.getFieldWithDefault(msg, 5, ""),
    primaryKeyValue: jspb.Message.getFieldWithDefault(msg, 6, ""),
    primaryKeyType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    selectWhereExpression: jspb.Message.getFieldWithDefault(msg, 8, ""),
    rowLimit: jspb.Message.getFieldWithDefault(msg, 9, ""),
    dbSrid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inSrid: jspb.Message.getFieldWithDefault(msg, 11, ""),
    outSrid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isDistinct: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    geometryDimension: jspb.Message.getFieldWithDefault(msg, 14, 0),
    attributeRowsList: jspb.Message.toObjectList(msg.getAttributeRowsList(),
    proto.service.AttributeRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.DatabaseOperationRequest}
 */
proto.service.DatabaseOperationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.DatabaseOperationRequest;
  return proto.service.DatabaseOperationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.DatabaseOperationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.DatabaseOperationRequest}
 */
proto.service.DatabaseOperationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSequencer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrimaryKey(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrimaryKeyValue(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrimaryKeyType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelectWhereExpression(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRowLimit(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDbSrid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInSrid(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutSrid(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDistinct(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGeometryDimension(value);
      break;
    case 15:
      var value = new proto.service.AttributeRow;
      reader.readMessage(value,proto.service.AttributeRow.deserializeBinaryFromReader);
      msg.addAttributeRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.DatabaseOperationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.DatabaseOperationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.DatabaseOperationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.DatabaseOperationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSequencer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOperation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrimaryKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrimaryKeyValue();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPrimaryKeyType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSelectWhereExpression();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRowLimit();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDbSrid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInSrid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getOutSrid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsDistinct();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getGeometryDimension();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getAttributeRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.service.AttributeRow.serializeBinaryToWriter
    );
  }
};


/**
 * optional string data_source = 1;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sequencer = 3;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getSequencer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setSequencer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string operation = 4;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getOperation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setOperation = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string primary_key = 5;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getPrimaryKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setPrimaryKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string primary_key_value = 6;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getPrimaryKeyValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setPrimaryKeyValue = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string primary_key_type = 7;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getPrimaryKeyType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setPrimaryKeyType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string select_where_expression = 8;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getSelectWhereExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setSelectWhereExpression = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string row_limit = 9;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getRowLimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setRowLimit = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string db_srid = 10;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getDbSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setDbSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string in_srid = 11;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getInSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setInSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string out_srid = 12;
 * @return {string}
 */
proto.service.DatabaseOperationRequest.prototype.getOutSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setOutSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool is_distinct = 13;
 * @return {boolean}
 */
proto.service.DatabaseOperationRequest.prototype.getIsDistinct = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setIsDistinct = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional int64 geometry_dimension = 14;
 * @return {number}
 */
proto.service.DatabaseOperationRequest.prototype.getGeometryDimension = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.setGeometryDimension = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * repeated AttributeRow attribute_rows = 15;
 * @return {!Array<!proto.service.AttributeRow>}
 */
proto.service.DatabaseOperationRequest.prototype.getAttributeRowsList = function() {
  return /** @type{!Array<!proto.service.AttributeRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.AttributeRow, 15));
};


/**
 * @param {!Array<!proto.service.AttributeRow>} value
 * @return {!proto.service.DatabaseOperationRequest} returns this
*/
proto.service.DatabaseOperationRequest.prototype.setAttributeRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.service.AttributeRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.AttributeRow}
 */
proto.service.DatabaseOperationRequest.prototype.addAttributeRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.service.AttributeRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.DatabaseOperationRequest} returns this
 */
proto.service.DatabaseOperationRequest.prototype.clearAttributeRowsList = function() {
  return this.setAttributeRowsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.AttributeRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.AttributeRow.prototype.toObject = function(opt_includeInstance) {
  return proto.service.AttributeRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.AttributeRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.service.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.AttributeRow}
 */
proto.service.AttributeRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.AttributeRow;
  return proto.service.AttributeRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.AttributeRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.AttributeRow}
 */
proto.service.AttributeRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.Attribute;
      reader.readMessage(value,proto.service.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.AttributeRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.AttributeRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.AttributeRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.AttributeRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.service.Attribute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Attribute attributes = 1;
 * @return {!Array<!proto.service.Attribute>}
 */
proto.service.AttributeRow.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.service.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.Attribute, 1));
};


/**
 * @param {!Array<!proto.service.Attribute>} value
 * @return {!proto.service.AttributeRow} returns this
*/
proto.service.AttributeRow.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.service.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.Attribute}
 */
proto.service.AttributeRow.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.service.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.AttributeRow} returns this
 */
proto.service.AttributeRow.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.service.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.Attribute}
 */
proto.service.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.Attribute;
  return proto.service.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.Attribute}
 */
proto.service.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.service.Attribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.Attribute} returns this
 */
proto.service.Attribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.service.Attribute.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.Attribute} returns this
 */
proto.service.Attribute.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.service.Attribute.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.Attribute} returns this
 */
proto.service.Attribute.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.DatabaseSelectOperationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.DatabaseSelectOperationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.service.DatabaseSelectOperationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.DatabaseSelectOperationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.DatabaseSelectOperationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.service.DatabaseSelectOperationObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.DatabaseSelectOperationResponse}
 */
proto.service.DatabaseSelectOperationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.DatabaseSelectOperationResponse;
  return proto.service.DatabaseSelectOperationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.DatabaseSelectOperationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.DatabaseSelectOperationResponse}
 */
proto.service.DatabaseSelectOperationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.DatabaseSelectOperationObject;
      reader.readMessage(value,proto.service.DatabaseSelectOperationObject.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.DatabaseSelectOperationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.DatabaseSelectOperationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.DatabaseSelectOperationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.DatabaseSelectOperationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.service.DatabaseSelectOperationObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DatabaseSelectOperationObject rows = 1;
 * @return {!Array<!proto.service.DatabaseSelectOperationObject>}
 */
proto.service.DatabaseSelectOperationResponse.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.service.DatabaseSelectOperationObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.DatabaseSelectOperationObject, 1));
};


/**
 * @param {!Array<!proto.service.DatabaseSelectOperationObject>} value
 * @return {!proto.service.DatabaseSelectOperationResponse} returns this
*/
proto.service.DatabaseSelectOperationResponse.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.service.DatabaseSelectOperationObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.DatabaseSelectOperationObject}
 */
proto.service.DatabaseSelectOperationResponse.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.service.DatabaseSelectOperationObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.DatabaseSelectOperationResponse} returns this
 */
proto.service.DatabaseSelectOperationResponse.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.DatabaseSelectOperationObject.prototype.toObject = function(opt_includeInstance) {
  return proto.service.DatabaseSelectOperationObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.DatabaseSelectOperationObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.DatabaseSelectOperationObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowMap: (f = msg.getRowMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.DatabaseSelectOperationObject}
 */
proto.service.DatabaseSelectOperationObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.DatabaseSelectOperationObject;
  return proto.service.DatabaseSelectOperationObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.DatabaseSelectOperationObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.DatabaseSelectOperationObject}
 */
proto.service.DatabaseSelectOperationObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRowMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.DatabaseSelectOperationObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.DatabaseSelectOperationObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.DatabaseSelectOperationObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.DatabaseSelectOperationObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> row = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.service.DatabaseSelectOperationObject.prototype.getRowMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.service.DatabaseSelectOperationObject} returns this
 */
proto.service.DatabaseSelectOperationObject.prototype.clearRowMap = function() {
  this.getRowMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.BindAttributeAndGeometryRequest.repeatedFields_ = [10,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.BindAttributeAndGeometryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.BindAttributeAndGeometryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BindAttributeAndGeometryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dbSrid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    inSrid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attributeTable: jspb.Message.getFieldWithDefault(msg, 4, ""),
    attributeIdColumn: jspb.Message.getFieldWithDefault(msg, 5, ""),
    attributeIdValue: jspb.Message.getFieldWithDefault(msg, 6, ""),
    attributeLinkGeometryColumn: jspb.Message.getFieldWithDefault(msg, 7, ""),
    attributeLinkGeometryValue: jspb.Message.getFieldWithDefault(msg, 8, ""),
    attributeSequencer: jspb.Message.getFieldWithDefault(msg, 9, ""),
    attributeInsertRowList: jspb.Message.toObjectList(msg.getAttributeInsertRowList(),
    proto.service.Attribute.toObject, includeInstance),
    geometryTable: jspb.Message.getFieldWithDefault(msg, 11, ""),
    geometryIdColumn: jspb.Message.getFieldWithDefault(msg, 12, ""),
    geometryIdValue: jspb.Message.getFieldWithDefault(msg, 13, ""),
    geometrySequencer: jspb.Message.getFieldWithDefault(msg, 14, ""),
    geometryDimension: jspb.Message.getFieldWithDefault(msg, 15, 0),
    geometryInsertRowList: jspb.Message.toObjectList(msg.getGeometryInsertRowList(),
    proto.service.Attribute.toObject, includeInstance),
    linkTable: jspb.Message.getFieldWithDefault(msg, 17, ""),
    linkTableGeometryIdColumn: jspb.Message.getFieldWithDefault(msg, 18, ""),
    linkTableAttributeIdColumn: jspb.Message.getFieldWithDefault(msg, 19, ""),
    insertAttribute: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    insertGeometry: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    withLinkTable: jspb.Message.getBooleanFieldWithDefault(msg, 22, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.BindAttributeAndGeometryRequest}
 */
proto.service.BindAttributeAndGeometryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.BindAttributeAndGeometryRequest;
  return proto.service.BindAttributeAndGeometryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.BindAttributeAndGeometryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.BindAttributeAndGeometryRequest}
 */
proto.service.BindAttributeAndGeometryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDbSrid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInSrid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeTable(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeIdColumn(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeIdValue(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeLinkGeometryColumn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeLinkGeometryValue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeSequencer(value);
      break;
    case 10:
      var value = new proto.service.Attribute;
      reader.readMessage(value,proto.service.Attribute.deserializeBinaryFromReader);
      msg.addAttributeInsertRow(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryTable(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryIdColumn(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryIdValue(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometrySequencer(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGeometryDimension(value);
      break;
    case 16:
      var value = new proto.service.Attribute;
      reader.readMessage(value,proto.service.Attribute.deserializeBinaryFromReader);
      msg.addGeometryInsertRow(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTable(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTableGeometryIdColumn(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTableAttributeIdColumn(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInsertAttribute(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInsertGeometry(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithLinkTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.BindAttributeAndGeometryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.BindAttributeAndGeometryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.BindAttributeAndGeometryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDbSrid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInSrid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttributeTable();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAttributeIdColumn();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAttributeIdValue();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAttributeLinkGeometryColumn();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAttributeLinkGeometryValue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAttributeSequencer();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAttributeInsertRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.service.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getGeometryTable();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getGeometryIdColumn();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getGeometryIdValue();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getGeometrySequencer();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getGeometryDimension();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getGeometryInsertRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.service.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getLinkTable();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLinkTableGeometryIdColumn();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLinkTableAttributeIdColumn();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getInsertAttribute();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getInsertGeometry();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getWithLinkTable();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
};


/**
 * optional string data_source = 1;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string db_srid = 2;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getDbSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setDbSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string in_srid = 3;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getInSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setInSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string attribute_table = 4;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getAttributeTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setAttributeTable = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string attribute_id_column = 5;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getAttributeIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setAttributeIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string attribute_id_value = 6;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getAttributeIdValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setAttributeIdValue = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string attribute_link_geometry_column = 7;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getAttributeLinkGeometryColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setAttributeLinkGeometryColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string attribute_link_geometry_value = 8;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getAttributeLinkGeometryValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setAttributeLinkGeometryValue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string attribute_sequencer = 9;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getAttributeSequencer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setAttributeSequencer = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated Attribute attribute_insert_row = 10;
 * @return {!Array<!proto.service.Attribute>}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getAttributeInsertRowList = function() {
  return /** @type{!Array<!proto.service.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.Attribute, 10));
};


/**
 * @param {!Array<!proto.service.Attribute>} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
*/
proto.service.BindAttributeAndGeometryRequest.prototype.setAttributeInsertRowList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.service.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.Attribute}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.addAttributeInsertRow = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.service.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.clearAttributeInsertRowList = function() {
  return this.setAttributeInsertRowList([]);
};


/**
 * optional string geometry_table = 11;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getGeometryTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setGeometryTable = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string geometry_id_column = 12;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getGeometryIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setGeometryIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string geometry_id_value = 13;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getGeometryIdValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setGeometryIdValue = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string geometry_sequencer = 14;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getGeometrySequencer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setGeometrySequencer = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int64 geometry_dimension = 15;
 * @return {number}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getGeometryDimension = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setGeometryDimension = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * repeated Attribute geometry_insert_row = 16;
 * @return {!Array<!proto.service.Attribute>}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getGeometryInsertRowList = function() {
  return /** @type{!Array<!proto.service.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.Attribute, 16));
};


/**
 * @param {!Array<!proto.service.Attribute>} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
*/
proto.service.BindAttributeAndGeometryRequest.prototype.setGeometryInsertRowList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.service.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.Attribute}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.addGeometryInsertRow = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.service.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.clearGeometryInsertRowList = function() {
  return this.setGeometryInsertRowList([]);
};


/**
 * optional string link_table = 17;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getLinkTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setLinkTable = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string link_table_geometry_id_column = 18;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getLinkTableGeometryIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setLinkTableGeometryIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string link_table_attribute_id_column = 19;
 * @return {string}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getLinkTableAttributeIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setLinkTableAttributeIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional bool insert_attribute = 20;
 * @return {boolean}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getInsertAttribute = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setInsertAttribute = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool insert_geometry = 21;
 * @return {boolean}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getInsertGeometry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setInsertGeometry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool with_link_table = 22;
 * @return {boolean}
 */
proto.service.BindAttributeAndGeometryRequest.prototype.getWithLinkTable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.BindAttributeAndGeometryRequest} returns this
 */
proto.service.BindAttributeAndGeometryRequest.prototype.setWithLinkTable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ReferenceValuesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ReferenceValuesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ReferenceValuesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ReferenceValuesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    referenceTable: jspb.Message.getFieldWithDefault(msg, 1, ""),
    referenceIdColumn: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referenceDisplayColumn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dataSource: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ReferenceValuesRequest}
 */
proto.service.ReferenceValuesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ReferenceValuesRequest;
  return proto.service.ReferenceValuesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ReferenceValuesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ReferenceValuesRequest}
 */
proto.service.ReferenceValuesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceTable(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceIdColumn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceDisplayColumn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ReferenceValuesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ReferenceValuesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ReferenceValuesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ReferenceValuesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReferenceTable();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReferenceIdColumn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferenceDisplayColumn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string reference_table = 1;
 * @return {string}
 */
proto.service.ReferenceValuesRequest.prototype.getReferenceTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ReferenceValuesRequest} returns this
 */
proto.service.ReferenceValuesRequest.prototype.setReferenceTable = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reference_id_column = 2;
 * @return {string}
 */
proto.service.ReferenceValuesRequest.prototype.getReferenceIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ReferenceValuesRequest} returns this
 */
proto.service.ReferenceValuesRequest.prototype.setReferenceIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reference_display_column = 3;
 * @return {string}
 */
proto.service.ReferenceValuesRequest.prototype.getReferenceDisplayColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ReferenceValuesRequest} returns this
 */
proto.service.ReferenceValuesRequest.prototype.setReferenceDisplayColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string data_source = 4;
 * @return {string}
 */
proto.service.ReferenceValuesRequest.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ReferenceValuesRequest} returns this
 */
proto.service.ReferenceValuesRequest.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.service.MethodType = {
  PROCEDURE: 0,
  FUNCTION: 1
};

goog.object.extend(exports, proto.service);
