// source: project_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$swagger_options_annotations_pb = require('./protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.service.ApplicationGroup', null, global);
goog.exportSymbol('proto.service.ApplicationModule', null, global);
goog.exportSymbol('proto.service.ApplicationPart', null, global);
goog.exportSymbol('proto.service.MapEngines', null, global);
goog.exportSymbol('proto.service.MapPart', null, global);
goog.exportSymbol('proto.service.MapPositioning', null, global);
goog.exportSymbol('proto.service.OldProject', null, global);
goog.exportSymbol('proto.service.PortalAction', null, global);
goog.exportSymbol('proto.service.Project', null, global);
goog.exportSymbol('proto.service.ProjectThemeLayerId', null, global);
goog.exportSymbol('proto.service.SearchEngines', null, global);
goog.exportSymbol('proto.service.SelectionStyle', null, global);
goog.exportSymbol('proto.service.SpatialServer', null, global);
goog.exportSymbol('proto.service.TemporalThemeAttribute', null, global);
goog.exportSymbol('proto.service.TemporalThemeLayer', null, global);
goog.exportSymbol('proto.service.ThemeGroup', null, global);
goog.exportSymbol('proto.service.ThemeInfoField', null, global);
goog.exportSymbol('proto.service.ThemeLayer', null, global);
goog.exportSymbol('proto.service.ThemeLayerDescription', null, global);
goog.exportSymbol('proto.service.ThemeLayerDescriptions', null, global);
goog.exportSymbol('proto.service.ThemeLayerResponse', null, global);
goog.exportSymbol('proto.service.ThemeLayers', null, global);
goog.exportSymbol('proto.service.ThemeServerOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.Project = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.Project.repeatedFields_, null);
};
goog.inherits(proto.service.Project, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.Project.displayName = 'proto.service.Project';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.MapPart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.MapPart.repeatedFields_, null);
};
goog.inherits(proto.service.MapPart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.MapPart.displayName = 'proto.service.MapPart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.MapPositioning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.MapPositioning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.MapPositioning.displayName = 'proto.service.MapPositioning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.ThemeGroup.repeatedFields_, null);
};
goog.inherits(proto.service.ThemeGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeGroup.displayName = 'proto.service.ThemeGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeLayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.ThemeLayer.repeatedFields_, null);
};
goog.inherits(proto.service.ThemeLayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeLayer.displayName = 'proto.service.ThemeLayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeServerOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ThemeServerOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeServerOptions.displayName = 'proto.service.ThemeServerOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.MapEngines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.MapEngines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.MapEngines.displayName = 'proto.service.MapEngines';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.PortalAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.PortalAction.repeatedFields_, null);
};
goog.inherits(proto.service.PortalAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.PortalAction.displayName = 'proto.service.PortalAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeInfoField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ThemeInfoField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeInfoField.displayName = 'proto.service.ThemeInfoField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.TemporalThemeLayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.TemporalThemeLayer.repeatedFields_, null);
};
goog.inherits(proto.service.TemporalThemeLayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.TemporalThemeLayer.displayName = 'proto.service.TemporalThemeLayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.TemporalThemeAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.TemporalThemeAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.TemporalThemeAttribute.displayName = 'proto.service.TemporalThemeAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.SelectionStyle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.SelectionStyle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.SelectionStyle.displayName = 'proto.service.SelectionStyle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.SpatialServer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.SpatialServer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.SpatialServer.displayName = 'proto.service.SpatialServer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.SearchEngines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.SearchEngines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.SearchEngines.displayName = 'proto.service.SearchEngines';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ApplicationPart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.ApplicationPart.repeatedFields_, null);
};
goog.inherits(proto.service.ApplicationPart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ApplicationPart.displayName = 'proto.service.ApplicationPart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ApplicationGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.ApplicationGroup.repeatedFields_, null);
};
goog.inherits(proto.service.ApplicationGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ApplicationGroup.displayName = 'proto.service.ApplicationGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ApplicationModule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ApplicationModule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ApplicationModule.displayName = 'proto.service.ApplicationModule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeLayerDescriptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.ThemeLayerDescriptions.repeatedFields_, null);
};
goog.inherits(proto.service.ThemeLayerDescriptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeLayerDescriptions.displayName = 'proto.service.ThemeLayerDescriptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeLayerDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ThemeLayerDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeLayerDescription.displayName = 'proto.service.ThemeLayerDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeLayers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.ThemeLayers.repeatedFields_, null);
};
goog.inherits(proto.service.ThemeLayers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeLayers.displayName = 'proto.service.ThemeLayers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ThemeLayerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ThemeLayerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ThemeLayerResponse.displayName = 'proto.service.ThemeLayerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.ProjectThemeLayerId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.ProjectThemeLayerId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.ProjectThemeLayerId.displayName = 'proto.service.ProjectThemeLayerId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.OldProject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.OldProject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.OldProject.displayName = 'proto.service.OldProject';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.Project.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.Project.prototype.toObject = function(opt_includeInstance) {
  return proto.service.Project.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.Project} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.Project.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectTitle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectIcon: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mapPart: (f = msg.getMapPart()) && proto.service.MapPart.toObject(includeInstance, f),
    applicationPart: (f = msg.getApplicationPart()) && proto.service.ApplicationPart.toObject(includeInstance, f),
    portalActionsList: jspb.Message.toObjectList(msg.getPortalActionsList(),
    proto.service.PortalAction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.Project}
 */
proto.service.Project.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.Project;
  return proto.service.Project.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.Project} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.Project}
 */
proto.service.Project.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectIcon(value);
      break;
    case 3:
      var value = new proto.service.MapPart;
      reader.readMessage(value,proto.service.MapPart.deserializeBinaryFromReader);
      msg.setMapPart(value);
      break;
    case 4:
      var value = new proto.service.ApplicationPart;
      reader.readMessage(value,proto.service.ApplicationPart.deserializeBinaryFromReader);
      msg.setApplicationPart(value);
      break;
    case 5:
      var value = new proto.service.PortalAction;
      reader.readMessage(value,proto.service.PortalAction.deserializeBinaryFromReader);
      msg.addPortalActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.Project.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.Project.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.Project} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.Project.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectIcon();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMapPart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.service.MapPart.serializeBinaryToWriter
    );
  }
  f = message.getApplicationPart();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.service.ApplicationPart.serializeBinaryToWriter
    );
  }
  f = message.getPortalActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.service.PortalAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional string project_title = 1;
 * @return {string}
 */
proto.service.Project.prototype.getProjectTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.Project} returns this
 */
proto.service.Project.prototype.setProjectTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project_icon = 2;
 * @return {string}
 */
proto.service.Project.prototype.getProjectIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.Project} returns this
 */
proto.service.Project.prototype.setProjectIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MapPart map_part = 3;
 * @return {?proto.service.MapPart}
 */
proto.service.Project.prototype.getMapPart = function() {
  return /** @type{?proto.service.MapPart} */ (
    jspb.Message.getWrapperField(this, proto.service.MapPart, 3));
};


/**
 * @param {?proto.service.MapPart|undefined} value
 * @return {!proto.service.Project} returns this
*/
proto.service.Project.prototype.setMapPart = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.Project} returns this
 */
proto.service.Project.prototype.clearMapPart = function() {
  return this.setMapPart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.Project.prototype.hasMapPart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ApplicationPart application_part = 4;
 * @return {?proto.service.ApplicationPart}
 */
proto.service.Project.prototype.getApplicationPart = function() {
  return /** @type{?proto.service.ApplicationPart} */ (
    jspb.Message.getWrapperField(this, proto.service.ApplicationPart, 4));
};


/**
 * @param {?proto.service.ApplicationPart|undefined} value
 * @return {!proto.service.Project} returns this
*/
proto.service.Project.prototype.setApplicationPart = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.Project} returns this
 */
proto.service.Project.prototype.clearApplicationPart = function() {
  return this.setApplicationPart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.Project.prototype.hasApplicationPart = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated PortalAction portal_actions = 5;
 * @return {!Array<!proto.service.PortalAction>}
 */
proto.service.Project.prototype.getPortalActionsList = function() {
  return /** @type{!Array<!proto.service.PortalAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.PortalAction, 5));
};


/**
 * @param {!Array<!proto.service.PortalAction>} value
 * @return {!proto.service.Project} returns this
*/
proto.service.Project.prototype.setPortalActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.service.PortalAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.PortalAction}
 */
proto.service.Project.prototype.addPortalActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.service.PortalAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.Project} returns this
 */
proto.service.Project.prototype.clearPortalActionsList = function() {
  return this.setPortalActionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.MapPart.repeatedFields_ = [6,8,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.MapPart.prototype.toObject = function(opt_includeInstance) {
  return proto.service.MapPart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.MapPart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.MapPart.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapPositioning: (f = msg.getMapPositioning()) && proto.service.MapPositioning.toObject(includeInstance, f),
    googleAnalyticsId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    yandexMetrikaId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    baseSrid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    searchOnlyVisible: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    themeGroupsList: jspb.Message.toObjectList(msg.getThemeGroupsList(),
    proto.service.ThemeGroup.toObject, includeInstance),
    country: jspb.Message.getFieldWithDefault(msg, 7, ""),
    spatialServersList: jspb.Message.toObjectList(msg.getSpatialServersList(),
    proto.service.SpatialServer.toObject, includeInstance),
    searchEngines: (f = msg.getSearchEngines()) && proto.service.SearchEngines.toObject(includeInstance, f),
    geolocation: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    cadastrePrefix: jspb.Message.getFieldWithDefault(msg, 11, ""),
    timeSeriesList: jspb.Message.toObjectList(msg.getTimeSeriesList(),
    proto.service.TemporalThemeLayer.toObject, includeInstance),
    selectionStyle: (f = msg.getSelectionStyle()) && proto.service.SelectionStyle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.MapPart}
 */
proto.service.MapPart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.MapPart;
  return proto.service.MapPart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.MapPart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.MapPart}
 */
proto.service.MapPart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.MapPositioning;
      reader.readMessage(value,proto.service.MapPositioning.deserializeBinaryFromReader);
      msg.setMapPositioning(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoogleAnalyticsId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setYandexMetrikaId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseSrid(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSearchOnlyVisible(value);
      break;
    case 6:
      var value = new proto.service.ThemeGroup;
      reader.readMessage(value,proto.service.ThemeGroup.deserializeBinaryFromReader);
      msg.addThemeGroups(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 8:
      var value = new proto.service.SpatialServer;
      reader.readMessage(value,proto.service.SpatialServer.deserializeBinaryFromReader);
      msg.addSpatialServers(value);
      break;
    case 9:
      var value = new proto.service.SearchEngines;
      reader.readMessage(value,proto.service.SearchEngines.deserializeBinaryFromReader);
      msg.setSearchEngines(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGeolocation(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCadastrePrefix(value);
      break;
    case 12:
      var value = new proto.service.TemporalThemeLayer;
      reader.readMessage(value,proto.service.TemporalThemeLayer.deserializeBinaryFromReader);
      msg.addTimeSeries(value);
      break;
    case 13:
      var value = new proto.service.SelectionStyle;
      reader.readMessage(value,proto.service.SelectionStyle.deserializeBinaryFromReader);
      msg.setSelectionStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.MapPart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.MapPart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.MapPart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.MapPart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapPositioning();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.service.MapPositioning.serializeBinaryToWriter
    );
  }
  f = message.getGoogleAnalyticsId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getYandexMetrikaId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBaseSrid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSearchOnlyVisible();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getThemeGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.service.ThemeGroup.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSpatialServersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.service.SpatialServer.serializeBinaryToWriter
    );
  }
  f = message.getSearchEngines();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.service.SearchEngines.serializeBinaryToWriter
    );
  }
  f = message.getGeolocation();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getCadastrePrefix();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTimeSeriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.service.TemporalThemeLayer.serializeBinaryToWriter
    );
  }
  f = message.getSelectionStyle();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.service.SelectionStyle.serializeBinaryToWriter
    );
  }
};


/**
 * optional MapPositioning map_positioning = 1;
 * @return {?proto.service.MapPositioning}
 */
proto.service.MapPart.prototype.getMapPositioning = function() {
  return /** @type{?proto.service.MapPositioning} */ (
    jspb.Message.getWrapperField(this, proto.service.MapPositioning, 1));
};


/**
 * @param {?proto.service.MapPositioning|undefined} value
 * @return {!proto.service.MapPart} returns this
*/
proto.service.MapPart.prototype.setMapPositioning = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.clearMapPositioning = function() {
  return this.setMapPositioning(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.MapPart.prototype.hasMapPositioning = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string google_analytics_id = 2;
 * @return {string}
 */
proto.service.MapPart.prototype.getGoogleAnalyticsId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.setGoogleAnalyticsId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string yandex_metrika_id = 3;
 * @return {string}
 */
proto.service.MapPart.prototype.getYandexMetrikaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.setYandexMetrikaId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string base_srid = 4;
 * @return {string}
 */
proto.service.MapPart.prototype.getBaseSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.setBaseSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool search_only_visible = 5;
 * @return {boolean}
 */
proto.service.MapPart.prototype.getSearchOnlyVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.setSearchOnlyVisible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated ThemeGroup theme_groups = 6;
 * @return {!Array<!proto.service.ThemeGroup>}
 */
proto.service.MapPart.prototype.getThemeGroupsList = function() {
  return /** @type{!Array<!proto.service.ThemeGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ThemeGroup, 6));
};


/**
 * @param {!Array<!proto.service.ThemeGroup>} value
 * @return {!proto.service.MapPart} returns this
*/
proto.service.MapPart.prototype.setThemeGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.service.ThemeGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ThemeGroup}
 */
proto.service.MapPart.prototype.addThemeGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.service.ThemeGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.clearThemeGroupsList = function() {
  return this.setThemeGroupsList([]);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.service.MapPart.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated SpatialServer spatial_servers = 8;
 * @return {!Array<!proto.service.SpatialServer>}
 */
proto.service.MapPart.prototype.getSpatialServersList = function() {
  return /** @type{!Array<!proto.service.SpatialServer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.SpatialServer, 8));
};


/**
 * @param {!Array<!proto.service.SpatialServer>} value
 * @return {!proto.service.MapPart} returns this
*/
proto.service.MapPart.prototype.setSpatialServersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.service.SpatialServer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.SpatialServer}
 */
proto.service.MapPart.prototype.addSpatialServers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.service.SpatialServer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.clearSpatialServersList = function() {
  return this.setSpatialServersList([]);
};


/**
 * optional SearchEngines search_engines = 9;
 * @return {?proto.service.SearchEngines}
 */
proto.service.MapPart.prototype.getSearchEngines = function() {
  return /** @type{?proto.service.SearchEngines} */ (
    jspb.Message.getWrapperField(this, proto.service.SearchEngines, 9));
};


/**
 * @param {?proto.service.SearchEngines|undefined} value
 * @return {!proto.service.MapPart} returns this
*/
proto.service.MapPart.prototype.setSearchEngines = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.clearSearchEngines = function() {
  return this.setSearchEngines(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.MapPart.prototype.hasSearchEngines = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool geolocation = 10;
 * @return {boolean}
 */
proto.service.MapPart.prototype.getGeolocation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.setGeolocation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string cadastre_prefix = 11;
 * @return {string}
 */
proto.service.MapPart.prototype.getCadastrePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.setCadastrePrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated TemporalThemeLayer time_series = 12;
 * @return {!Array<!proto.service.TemporalThemeLayer>}
 */
proto.service.MapPart.prototype.getTimeSeriesList = function() {
  return /** @type{!Array<!proto.service.TemporalThemeLayer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.TemporalThemeLayer, 12));
};


/**
 * @param {!Array<!proto.service.TemporalThemeLayer>} value
 * @return {!proto.service.MapPart} returns this
*/
proto.service.MapPart.prototype.setTimeSeriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.service.TemporalThemeLayer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.TemporalThemeLayer}
 */
proto.service.MapPart.prototype.addTimeSeries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.service.TemporalThemeLayer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.clearTimeSeriesList = function() {
  return this.setTimeSeriesList([]);
};


/**
 * optional SelectionStyle selection_style = 13;
 * @return {?proto.service.SelectionStyle}
 */
proto.service.MapPart.prototype.getSelectionStyle = function() {
  return /** @type{?proto.service.SelectionStyle} */ (
    jspb.Message.getWrapperField(this, proto.service.SelectionStyle, 13));
};


/**
 * @param {?proto.service.SelectionStyle|undefined} value
 * @return {!proto.service.MapPart} returns this
*/
proto.service.MapPart.prototype.setSelectionStyle = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.MapPart} returns this
 */
proto.service.MapPart.prototype.clearSelectionStyle = function() {
  return this.setSelectionStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.MapPart.prototype.hasSelectionStyle = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.MapPositioning.prototype.toObject = function(opt_includeInstance) {
  return proto.service.MapPositioning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.MapPositioning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.MapPositioning.toObject = function(includeInstance, msg) {
  var f, obj = {
    centerLat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    centerLng: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    zoom: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    northEastLat: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    northEastLng: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    southWestLat: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    southWestLng: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.MapPositioning}
 */
proto.service.MapPositioning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.MapPositioning;
  return proto.service.MapPositioning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.MapPositioning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.MapPositioning}
 */
proto.service.MapPositioning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCenterLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCenterLng(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZoom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNorthEastLat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNorthEastLng(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSouthWestLat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSouthWestLng(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.MapPositioning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.MapPositioning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.MapPositioning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.MapPositioning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCenterLat();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCenterLng();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZoom();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getNorthEastLat();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getNorthEastLng();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSouthWestLat();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getSouthWestLng();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * optional double center_lat = 1;
 * @return {number}
 */
proto.service.MapPositioning.prototype.getCenterLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.MapPositioning} returns this
 */
proto.service.MapPositioning.prototype.setCenterLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double center_lng = 2;
 * @return {number}
 */
proto.service.MapPositioning.prototype.getCenterLng = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.MapPositioning} returns this
 */
proto.service.MapPositioning.prototype.setCenterLng = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double zoom = 3;
 * @return {number}
 */
proto.service.MapPositioning.prototype.getZoom = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.MapPositioning} returns this
 */
proto.service.MapPositioning.prototype.setZoom = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double north_east_lat = 4;
 * @return {number}
 */
proto.service.MapPositioning.prototype.getNorthEastLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.MapPositioning} returns this
 */
proto.service.MapPositioning.prototype.setNorthEastLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double north_east_lng = 5;
 * @return {number}
 */
proto.service.MapPositioning.prototype.getNorthEastLng = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.MapPositioning} returns this
 */
proto.service.MapPositioning.prototype.setNorthEastLng = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double south_west_lat = 6;
 * @return {number}
 */
proto.service.MapPositioning.prototype.getSouthWestLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.MapPositioning} returns this
 */
proto.service.MapPositioning.prototype.setSouthWestLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double south_west_lng = 7;
 * @return {number}
 */
proto.service.MapPositioning.prototype.getSouthWestLng = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.MapPositioning} returns this
 */
proto.service.MapPositioning.prototype.setSouthWestLng = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.ThemeGroup.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    themeGroupsList: jspb.Message.toObjectList(msg.getThemeGroupsList(),
    proto.service.ThemeGroup.toObject, includeInstance),
    themeLayersList: jspb.Message.toObjectList(msg.getThemeLayersList(),
    proto.service.ThemeLayer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeGroup}
 */
proto.service.ThemeGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeGroup;
  return proto.service.ThemeGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeGroup}
 */
proto.service.ThemeGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = new proto.service.ThemeGroup;
      reader.readMessage(value,proto.service.ThemeGroup.deserializeBinaryFromReader);
      msg.addThemeGroups(value);
      break;
    case 4:
      var value = new proto.service.ThemeLayer;
      reader.readMessage(value,proto.service.ThemeLayer.deserializeBinaryFromReader);
      msg.addThemeLayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThemeGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.service.ThemeGroup.serializeBinaryToWriter
    );
  }
  f = message.getThemeLayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.service.ThemeLayer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.ThemeGroup.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeGroup} returns this
 */
proto.service.ThemeGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.ThemeGroup.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeGroup} returns this
 */
proto.service.ThemeGroup.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ThemeGroup theme_groups = 3;
 * @return {!Array<!proto.service.ThemeGroup>}
 */
proto.service.ThemeGroup.prototype.getThemeGroupsList = function() {
  return /** @type{!Array<!proto.service.ThemeGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ThemeGroup, 3));
};


/**
 * @param {!Array<!proto.service.ThemeGroup>} value
 * @return {!proto.service.ThemeGroup} returns this
*/
proto.service.ThemeGroup.prototype.setThemeGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.service.ThemeGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ThemeGroup}
 */
proto.service.ThemeGroup.prototype.addThemeGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.service.ThemeGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ThemeGroup} returns this
 */
proto.service.ThemeGroup.prototype.clearThemeGroupsList = function() {
  return this.setThemeGroupsList([]);
};


/**
 * repeated ThemeLayer theme_layers = 4;
 * @return {!Array<!proto.service.ThemeLayer>}
 */
proto.service.ThemeGroup.prototype.getThemeLayersList = function() {
  return /** @type{!Array<!proto.service.ThemeLayer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ThemeLayer, 4));
};


/**
 * @param {!Array<!proto.service.ThemeLayer>} value
 * @return {!proto.service.ThemeGroup} returns this
*/
proto.service.ThemeGroup.prototype.setThemeLayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.service.ThemeLayer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ThemeLayer}
 */
proto.service.ThemeGroup.prototype.addThemeLayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.service.ThemeLayer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ThemeGroup} returns this
 */
proto.service.ThemeGroup.prototype.clearThemeLayersList = function() {
  return this.setThemeLayersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.ThemeLayer.repeatedFields_ = [43,44];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeLayer.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeLayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeLayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    themeServerOptions: (f = msg.getThemeServerOptions()) && proto.service.ThemeServerOptions.toObject(includeInstance, f),
    searchable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    editable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    exportable: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    visible: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isWfs: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    hasData: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    quickSearch: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isTime: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    mapEngines: (f = msg.getMapEngines()) && proto.service.MapEngines.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 12, ""),
    label: jspb.Message.getFieldWithDefault(msg, 13, ""),
    description: jspb.Message.getFieldWithDefault(msg, 14, ""),
    time: jspb.Message.getFieldWithDefault(msg, 15, ""),
    style: jspb.Message.getFieldWithDefault(msg, 16, ""),
    infoClickTargetUnit: jspb.Message.getFieldWithDefault(msg, 17, ""),
    infoClickTargetSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    showOnMapZoom: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    tileSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    minScale: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    maxScale: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    index: jspb.Message.getFloatingPointFieldWithDefault(msg, 23, 0.0),
    legendIconUrl: jspb.Message.getFieldWithDefault(msg, 24, ""),
    serverUrl: jspb.Message.getFieldWithDefault(msg, 25, ""),
    wmsServer: jspb.Message.getFieldWithDefault(msg, 26, ""),
    dataSource: jspb.Message.getFieldWithDefault(msg, 27, ""),
    mapViewerDataSource: jspb.Message.getFieldWithDefault(msg, 28, ""),
    schemeName: jspb.Message.getFieldWithDefault(msg, 29, ""),
    srid: jspb.Message.getFieldWithDefault(msg, 30, ""),
    geometryTable: jspb.Message.getFieldWithDefault(msg, 31, ""),
    geometryColumn: jspb.Message.getFieldWithDefault(msg, 32, ""),
    geometryIdColumn: jspb.Message.getFieldWithDefault(msg, 33, ""),
    geometryTableSequencer: jspb.Message.getFieldWithDefault(msg, 34, ""),
    geometryType: jspb.Message.getFieldWithDefault(msg, 35, ""),
    geometryDimension: jspb.Message.getFloatingPointFieldWithDefault(msg, 36, 0.0),
    attributeTable: jspb.Message.getFieldWithDefault(msg, 37, ""),
    attributeIdColumn: jspb.Message.getFieldWithDefault(msg, 38, ""),
    geometryAttributeLinkTable: jspb.Message.getFieldWithDefault(msg, 39, ""),
    geometryAttributeLinkColumn: jspb.Message.getFieldWithDefault(msg, 40, ""),
    linkTableGeometryIdColumn: jspb.Message.getFieldWithDefault(msg, 41, ""),
    linkTableAttributeIdColumn: jspb.Message.getFieldWithDefault(msg, 42, ""),
    portalActionsList: jspb.Message.toObjectList(msg.getPortalActionsList(),
    proto.service.PortalAction.toObject, includeInstance),
    themeInfoFieldsList: jspb.Message.toObjectList(msg.getThemeInfoFieldsList(),
    proto.service.ThemeInfoField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeLayer}
 */
proto.service.ThemeLayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeLayer;
  return proto.service.ThemeLayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeLayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeLayer}
 */
proto.service.ThemeLayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.service.ThemeServerOptions;
      reader.readMessage(value,proto.service.ThemeServerOptions.deserializeBinaryFromReader);
      msg.setThemeServerOptions(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSearchable(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEditable(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExportable(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVisible(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsWfs(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasData(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuickSearch(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTime(value);
      break;
    case 11:
      var value = new proto.service.MapEngines;
      reader.readMessage(value,proto.service.MapEngines.deserializeBinaryFromReader);
      msg.setMapEngines(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setStyle(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfoClickTargetUnit(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInfoClickTargetSize(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setShowOnMapZoom(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTileSize(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinScale(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxScale(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIndex(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLegendIconUrl(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerUrl(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setWmsServer(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapViewerDataSource(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemeName(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrid(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryTable(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryColumn(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryIdColumn(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryTableSequencer(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryType(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGeometryDimension(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeTable(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeIdColumn(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryAttributeLinkTable(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryAttributeLinkColumn(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTableGeometryIdColumn(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkTableAttributeIdColumn(value);
      break;
    case 43:
      var value = new proto.service.PortalAction;
      reader.readMessage(value,proto.service.PortalAction.deserializeBinaryFromReader);
      msg.addPortalActions(value);
      break;
    case 44:
      var value = new proto.service.ThemeInfoField;
      reader.readMessage(value,proto.service.ThemeInfoField.deserializeBinaryFromReader);
      msg.addThemeInfoFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeLayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeLayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeLayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeServerOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.service.ThemeServerOptions.serializeBinaryToWriter
    );
  }
  f = message.getSearchable();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getEditable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getExportable();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getVisible();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsWfs();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getHasData();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getQuickSearch();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsTime();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getMapEngines();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.service.MapEngines.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getStyle();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getInfoClickTargetUnit();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getInfoClickTargetSize();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = message.getShowOnMapZoom();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getTileSize();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getMinScale();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getMaxScale();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0.0) {
    writer.writeDouble(
      23,
      f
    );
  }
  f = message.getLegendIconUrl();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getServerUrl();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getWmsServer();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getMapViewerDataSource();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getSchemeName();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getSrid();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getGeometryTable();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getGeometryColumn();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getGeometryIdColumn();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getGeometryTableSequencer();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getGeometryType();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getGeometryDimension();
  if (f !== 0.0) {
    writer.writeDouble(
      36,
      f
    );
  }
  f = message.getAttributeTable();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getAttributeIdColumn();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getGeometryAttributeLinkTable();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getGeometryAttributeLinkColumn();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getLinkTableGeometryIdColumn();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getLinkTableAttributeIdColumn();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getPortalActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      43,
      f,
      proto.service.PortalAction.serializeBinaryToWriter
    );
  }
  f = message.getThemeInfoFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      44,
      f,
      proto.service.ThemeInfoField.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ThemeServerOptions theme_server_options = 2;
 * @return {?proto.service.ThemeServerOptions}
 */
proto.service.ThemeLayer.prototype.getThemeServerOptions = function() {
  return /** @type{?proto.service.ThemeServerOptions} */ (
    jspb.Message.getWrapperField(this, proto.service.ThemeServerOptions, 2));
};


/**
 * @param {?proto.service.ThemeServerOptions|undefined} value
 * @return {!proto.service.ThemeLayer} returns this
*/
proto.service.ThemeLayer.prototype.setThemeServerOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.clearThemeServerOptions = function() {
  return this.setThemeServerOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.hasThemeServerOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool searchable = 3;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getSearchable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setSearchable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool editable = 4;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getEditable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setEditable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool exportable = 5;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getExportable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setExportable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool visible = 6;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setVisible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_wfs = 7;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getIsWfs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setIsWfs = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool has_data = 8;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getHasData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setHasData = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool quick_search = 9;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getQuickSearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setQuickSearch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_time = 10;
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.getIsTime = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setIsTime = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional MapEngines map_engines = 11;
 * @return {?proto.service.MapEngines}
 */
proto.service.ThemeLayer.prototype.getMapEngines = function() {
  return /** @type{?proto.service.MapEngines} */ (
    jspb.Message.getWrapperField(this, proto.service.MapEngines, 11));
};


/**
 * @param {?proto.service.MapEngines|undefined} value
 * @return {!proto.service.ThemeLayer} returns this
*/
proto.service.ThemeLayer.prototype.setMapEngines = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.clearMapEngines = function() {
  return this.setMapEngines(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.ThemeLayer.prototype.hasMapEngines = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string name = 12;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string label = 13;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string description = 14;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string time = 15;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string style = 16;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getStyle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setStyle = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string info_click_target_unit = 17;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getInfoClickTargetUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setInfoClickTargetUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional double info_click_target_size = 18;
 * @return {number}
 */
proto.service.ThemeLayer.prototype.getInfoClickTargetSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setInfoClickTargetSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional double show_on_map_zoom = 19;
 * @return {number}
 */
proto.service.ThemeLayer.prototype.getShowOnMapZoom = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setShowOnMapZoom = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional double tile_size = 20;
 * @return {number}
 */
proto.service.ThemeLayer.prototype.getTileSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setTileSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional double min_scale = 21;
 * @return {number}
 */
proto.service.ThemeLayer.prototype.getMinScale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setMinScale = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional double max_scale = 22;
 * @return {number}
 */
proto.service.ThemeLayer.prototype.getMaxScale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setMaxScale = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional double index = 23;
 * @return {number}
 */
proto.service.ThemeLayer.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setIndex = function(value) {
  return jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional string legend_icon_url = 24;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getLegendIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setLegendIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string server_url = 25;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getServerUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setServerUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string wms_server = 26;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getWmsServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setWmsServer = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string data_source = 27;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string map_viewer_data_source = 28;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getMapViewerDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setMapViewerDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string scheme_name = 29;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getSchemeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setSchemeName = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string srid = 30;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getSrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setSrid = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string geometry_table = 31;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getGeometryTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryTable = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string geometry_column = 32;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getGeometryColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string geometry_id_column = 33;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getGeometryIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string geometry_table_sequencer = 34;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getGeometryTableSequencer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryTableSequencer = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string geometry_type = 35;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getGeometryType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryType = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional double geometry_dimension = 36;
 * @return {number}
 */
proto.service.ThemeLayer.prototype.getGeometryDimension = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 36, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryDimension = function(value) {
  return jspb.Message.setProto3FloatField(this, 36, value);
};


/**
 * optional string attribute_table = 37;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getAttributeTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setAttributeTable = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string attribute_id_column = 38;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getAttributeIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setAttributeIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string geometry_attribute_link_table = 39;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getGeometryAttributeLinkTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryAttributeLinkTable = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string geometry_attribute_link_column = 40;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getGeometryAttributeLinkColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setGeometryAttributeLinkColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string link_table_geometry_id_column = 41;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getLinkTableGeometryIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setLinkTableGeometryIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string link_table_attribute_id_column = 42;
 * @return {string}
 */
proto.service.ThemeLayer.prototype.getLinkTableAttributeIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.setLinkTableAttributeIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * repeated PortalAction portal_actions = 43;
 * @return {!Array<!proto.service.PortalAction>}
 */
proto.service.ThemeLayer.prototype.getPortalActionsList = function() {
  return /** @type{!Array<!proto.service.PortalAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.PortalAction, 43));
};


/**
 * @param {!Array<!proto.service.PortalAction>} value
 * @return {!proto.service.ThemeLayer} returns this
*/
proto.service.ThemeLayer.prototype.setPortalActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 43, value);
};


/**
 * @param {!proto.service.PortalAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.PortalAction}
 */
proto.service.ThemeLayer.prototype.addPortalActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 43, opt_value, proto.service.PortalAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.clearPortalActionsList = function() {
  return this.setPortalActionsList([]);
};


/**
 * repeated ThemeInfoField theme_info_fields = 44;
 * @return {!Array<!proto.service.ThemeInfoField>}
 */
proto.service.ThemeLayer.prototype.getThemeInfoFieldsList = function() {
  return /** @type{!Array<!proto.service.ThemeInfoField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ThemeInfoField, 44));
};


/**
 * @param {!Array<!proto.service.ThemeInfoField>} value
 * @return {!proto.service.ThemeLayer} returns this
*/
proto.service.ThemeLayer.prototype.setThemeInfoFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 44, value);
};


/**
 * @param {!proto.service.ThemeInfoField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ThemeInfoField}
 */
proto.service.ThemeLayer.prototype.addThemeInfoFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 44, opt_value, proto.service.ThemeInfoField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ThemeLayer} returns this
 */
proto.service.ThemeLayer.prototype.clearThemeInfoFieldsList = function() {
  return this.setThemeInfoFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeServerOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeServerOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeServerOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeServerOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeServerOptions}
 */
proto.service.ThemeServerOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeServerOptions;
  return proto.service.ThemeServerOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeServerOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeServerOptions}
 */
proto.service.ThemeServerOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeServerOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeServerOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeServerOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeServerOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.service.ThemeServerOptions.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeServerOptions} returns this
 */
proto.service.ThemeServerOptions.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.service.ThemeServerOptions.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeServerOptions} returns this
 */
proto.service.ThemeServerOptions.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.MapEngines.prototype.toObject = function(opt_includeInstance) {
  return proto.service.MapEngines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.MapEngines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.MapEngines.toObject = function(includeInstance, msg) {
  var f, obj = {
    leaflet: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cesium: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.MapEngines}
 */
proto.service.MapEngines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.MapEngines;
  return proto.service.MapEngines.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.MapEngines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.MapEngines}
 */
proto.service.MapEngines.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeaflet(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCesium(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.MapEngines.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.MapEngines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.MapEngines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.MapEngines.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeaflet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCesium();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool leaflet = 1;
 * @return {boolean}
 */
proto.service.MapEngines.prototype.getLeaflet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.MapEngines} returns this
 */
proto.service.MapEngines.prototype.setLeaflet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool cesium = 2;
 * @return {boolean}
 */
proto.service.MapEngines.prototype.getCesium = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.MapEngines} returns this
 */
proto.service.MapEngines.prototype.setCesium = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.PortalAction.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.PortalAction.prototype.toObject = function(opt_includeInstance) {
  return proto.service.PortalAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.PortalAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.PortalAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tooltip: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pb_function: jspb.Message.getFieldWithDefault(msg, 4, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 5, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 6, ""),
    iconType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userGroupsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    onScreen: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.PortalAction}
 */
proto.service.PortalAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.PortalAction;
  return proto.service.PortalAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.PortalAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.PortalAction}
 */
proto.service.PortalAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTooltip(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunction(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserGroups(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnScreen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.PortalAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.PortalAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.PortalAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.PortalAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTooltip();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFunction();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIconType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getOnScreen();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.PortalAction.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.service.PortalAction.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tooltip = 3;
 * @return {string}
 */
proto.service.PortalAction.prototype.getTooltip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setTooltip = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string function = 4;
 * @return {string}
 */
proto.service.PortalAction.prototype.getFunction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setFunction = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string platform = 5;
 * @return {string}
 */
proto.service.PortalAction.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string icon = 6;
 * @return {string}
 */
proto.service.PortalAction.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icon_type = 7;
 * @return {string}
 */
proto.service.PortalAction.prototype.getIconType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setIconType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string user_groups = 8;
 * @return {!Array<string>}
 */
proto.service.PortalAction.prototype.getUserGroupsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setUserGroupsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.addUserGroups = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.clearUserGroupsList = function() {
  return this.setUserGroupsList([]);
};


/**
 * optional bool on_screen = 9;
 * @return {boolean}
 */
proto.service.PortalAction.prototype.getOnScreen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.PortalAction} returns this
 */
proto.service.PortalAction.prototype.setOnScreen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeInfoField.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeInfoField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeInfoField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeInfoField.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    column: jspb.Message.getFieldWithDefault(msg, 3, ""),
    columnType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    controlType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    referenceTable: jspb.Message.getFieldWithDefault(msg, 6, ""),
    referenceIdColumn: jspb.Message.getFieldWithDefault(msg, 7, ""),
    referenceDisplayColumn: jspb.Message.getFieldWithDefault(msg, 8, ""),
    quickSearch: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isRequired: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isReadOnly: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    pos: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeInfoField}
 */
proto.service.ThemeInfoField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeInfoField;
  return proto.service.ThemeInfoField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeInfoField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeInfoField}
 */
proto.service.ThemeInfoField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceTable(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceIdColumn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceDisplayColumn(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuickSearch(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRequired(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReadOnly(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeInfoField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeInfoField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeInfoField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeInfoField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getColumnType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getControlType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReferenceTable();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReferenceIdColumn();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReferenceDisplayColumn();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getQuickSearch();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsRequired();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsReadOnly();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getPos();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string column = 3;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string column_type = 4;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getColumnType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setColumnType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string control_type = 5;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getControlType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setControlType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string reference_table = 6;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getReferenceTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setReferenceTable = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string reference_id_column = 7;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getReferenceIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setReferenceIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string reference_display_column = 8;
 * @return {string}
 */
proto.service.ThemeInfoField.prototype.getReferenceDisplayColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setReferenceDisplayColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool quick_search = 9;
 * @return {boolean}
 */
proto.service.ThemeInfoField.prototype.getQuickSearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setQuickSearch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_required = 10;
 * @return {boolean}
 */
proto.service.ThemeInfoField.prototype.getIsRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setIsRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_read_only = 11;
 * @return {boolean}
 */
proto.service.ThemeInfoField.prototype.getIsReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setIsReadOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int32 pos = 12;
 * @return {number}
 */
proto.service.ThemeInfoField.prototype.getPos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.ThemeInfoField} returns this
 */
proto.service.ThemeInfoField.prototype.setPos = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.TemporalThemeLayer.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.TemporalThemeLayer.prototype.toObject = function(opt_includeInstance) {
  return proto.service.TemporalThemeLayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.TemporalThemeLayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.TemporalThemeLayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataSource: jspb.Message.getFieldWithDefault(msg, 3, ""),
    schemeName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    geometryTable: jspb.Message.getFieldWithDefault(msg, 5, ""),
    geometryIdColumn: jspb.Message.getFieldWithDefault(msg, 6, ""),
    geometryColumn: jspb.Message.getFieldWithDefault(msg, 7, ""),
    temporalStartColumn: jspb.Message.getFieldWithDefault(msg, 8, ""),
    temporalEndColumn: jspb.Message.getFieldWithDefault(msg, 9, ""),
    timeSeriesStart: jspb.Message.getFieldWithDefault(msg, 10, ""),
    timeSeriesEnd: jspb.Message.getFieldWithDefault(msg, 11, ""),
    selectionStyle: (f = msg.getSelectionStyle()) && proto.service.SelectionStyle.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 13, ""),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.service.TemporalThemeAttribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.TemporalThemeLayer}
 */
proto.service.TemporalThemeLayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.TemporalThemeLayer;
  return proto.service.TemporalThemeLayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.TemporalThemeLayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.TemporalThemeLayer}
 */
proto.service.TemporalThemeLayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemeName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryTable(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryIdColumn(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeometryColumn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemporalStartColumn(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemporalEndColumn(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeSeriesStart(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeSeriesEnd(value);
      break;
    case 12:
      var value = new proto.service.SelectionStyle;
      reader.readMessage(value,proto.service.SelectionStyle.deserializeBinaryFromReader);
      msg.setSelectionStyle(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 14:
      var value = new proto.service.TemporalThemeAttribute;
      reader.readMessage(value,proto.service.TemporalThemeAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.TemporalThemeLayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.TemporalThemeLayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.TemporalThemeLayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.TemporalThemeLayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSchemeName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGeometryTable();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGeometryIdColumn();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGeometryColumn();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTemporalStartColumn();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTemporalEndColumn();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTimeSeriesStart();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTimeSeriesEnd();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSelectionStyle();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.service.SelectionStyle.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.service.TemporalThemeAttribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string data_source = 3;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setDataSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scheme_name = 4;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getSchemeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setSchemeName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string geometry_table = 5;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getGeometryTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setGeometryTable = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string geometry_id_column = 6;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getGeometryIdColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setGeometryIdColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string geometry_column = 7;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getGeometryColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setGeometryColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string temporal_start_column = 8;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getTemporalStartColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setTemporalStartColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string temporal_end_column = 9;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getTemporalEndColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setTemporalEndColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string time_series_start = 10;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getTimeSeriesStart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setTimeSeriesStart = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string time_series_end = 11;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getTimeSeriesEnd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setTimeSeriesEnd = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional SelectionStyle selection_style = 12;
 * @return {?proto.service.SelectionStyle}
 */
proto.service.TemporalThemeLayer.prototype.getSelectionStyle = function() {
  return /** @type{?proto.service.SelectionStyle} */ (
    jspb.Message.getWrapperField(this, proto.service.SelectionStyle, 12));
};


/**
 * @param {?proto.service.SelectionStyle|undefined} value
 * @return {!proto.service.TemporalThemeLayer} returns this
*/
proto.service.TemporalThemeLayer.prototype.setSelectionStyle = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.clearSelectionStyle = function() {
  return this.setSelectionStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.TemporalThemeLayer.prototype.hasSelectionStyle = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string description = 13;
 * @return {string}
 */
proto.service.TemporalThemeLayer.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * repeated TemporalThemeAttribute attributes = 14;
 * @return {!Array<!proto.service.TemporalThemeAttribute>}
 */
proto.service.TemporalThemeLayer.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.service.TemporalThemeAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.TemporalThemeAttribute, 14));
};


/**
 * @param {!Array<!proto.service.TemporalThemeAttribute>} value
 * @return {!proto.service.TemporalThemeLayer} returns this
*/
proto.service.TemporalThemeLayer.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.service.TemporalThemeAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.TemporalThemeAttribute}
 */
proto.service.TemporalThemeLayer.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.service.TemporalThemeAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.TemporalThemeLayer} returns this
 */
proto.service.TemporalThemeLayer.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.TemporalThemeAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.service.TemporalThemeAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.TemporalThemeAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.TemporalThemeAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.TemporalThemeAttribute}
 */
proto.service.TemporalThemeAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.TemporalThemeAttribute;
  return proto.service.TemporalThemeAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.TemporalThemeAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.TemporalThemeAttribute}
 */
proto.service.TemporalThemeAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.TemporalThemeAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.TemporalThemeAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.TemporalThemeAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.TemporalThemeAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.service.TemporalThemeAttribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeAttribute} returns this
 */
proto.service.TemporalThemeAttribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.TemporalThemeAttribute.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.TemporalThemeAttribute} returns this
 */
proto.service.TemporalThemeAttribute.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.SelectionStyle.prototype.toObject = function(opt_includeInstance) {
  return proto.service.SelectionStyle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.SelectionStyle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SelectionStyle.toObject = function(includeInstance, msg) {
  var f, obj = {
    stroke: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    color: jspb.Message.getFieldWithDefault(msg, 2, ""),
    weight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    opacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    lineCap: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lineJoin: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dashArray: jspb.Message.getFieldWithDefault(msg, 7, ""),
    dashOffset: jspb.Message.getFieldWithDefault(msg, 8, ""),
    fill: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    fillColor: jspb.Message.getFieldWithDefault(msg, 10, ""),
    fillOpacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    fillRule: jspb.Message.getFieldWithDefault(msg, 12, ""),
    bubblingMouseEvents: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    interactive: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    pane: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.SelectionStyle}
 */
proto.service.SelectionStyle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.SelectionStyle;
  return proto.service.SelectionStyle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.SelectionStyle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.SelectionStyle}
 */
proto.service.SelectionStyle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStroke(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpacity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLineCap(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLineJoin(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashArray(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashOffset(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFill(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFillColor(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFillOpacity(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFillRule(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBubblingMouseEvents(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInteractive(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPane(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.SelectionStyle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.SelectionStyle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.SelectionStyle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SelectionStyle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStroke();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOpacity();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLineCap();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLineJoin();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDashArray();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDashOffset();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFill();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getFillColor();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFillOpacity();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getFillRule();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBubblingMouseEvents();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getInteractive();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPane();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional bool stroke = 1;
 * @return {boolean}
 */
proto.service.SelectionStyle.prototype.getStroke = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setStroke = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string color = 2;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 weight = 3;
 * @return {number}
 */
proto.service.SelectionStyle.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double opacity = 4;
 * @return {number}
 */
proto.service.SelectionStyle.prototype.getOpacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setOpacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string line_cap = 5;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getLineCap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setLineCap = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string line_join = 6;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getLineJoin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setLineJoin = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string dash_array = 7;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getDashArray = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setDashArray = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string dash_offset = 8;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getDashOffset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setDashOffset = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool fill = 9;
 * @return {boolean}
 */
proto.service.SelectionStyle.prototype.getFill = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setFill = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string fill_color = 10;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getFillColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setFillColor = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional double fill_opacity = 11;
 * @return {number}
 */
proto.service.SelectionStyle.prototype.getFillOpacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setFillOpacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional string fill_rule = 12;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getFillRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setFillRule = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool bubbling_mouse_events = 13;
 * @return {boolean}
 */
proto.service.SelectionStyle.prototype.getBubblingMouseEvents = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setBubblingMouseEvents = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool interactive = 14;
 * @return {boolean}
 */
proto.service.SelectionStyle.prototype.getInteractive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setInteractive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string pane = 15;
 * @return {string}
 */
proto.service.SelectionStyle.prototype.getPane = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SelectionStyle} returns this
 */
proto.service.SelectionStyle.prototype.setPane = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.SpatialServer.prototype.toObject = function(opt_includeInstance) {
  return proto.service.SpatialServer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.SpatialServer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SpatialServer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isSecure: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.SpatialServer}
 */
proto.service.SpatialServer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.SpatialServer;
  return proto.service.SpatialServer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.SpatialServer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.SpatialServer}
 */
proto.service.SpatialServer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSecure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.SpatialServer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.SpatialServer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.SpatialServer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SpatialServer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsSecure();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.service.SpatialServer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialServer} returns this
 */
proto.service.SpatialServer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uri = 2;
 * @return {string}
 */
proto.service.SpatialServer.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialServer} returns this
 */
proto.service.SpatialServer.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.service.SpatialServer.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialServer} returns this
 */
proto.service.SpatialServer.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.service.SpatialServer.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.SpatialServer} returns this
 */
proto.service.SpatialServer.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_secure = 5;
 * @return {boolean}
 */
proto.service.SpatialServer.prototype.getIsSecure = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SpatialServer} returns this
 */
proto.service.SpatialServer.prototype.setIsSecure = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.SearchEngines.prototype.toObject = function(opt_includeInstance) {
  return proto.service.SearchEngines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.SearchEngines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SearchEngines.toObject = function(includeInstance, msg) {
  var f, obj = {
    yandex: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    rosreestr: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    google: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    osm: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    quickSearch: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.SearchEngines}
 */
proto.service.SearchEngines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.SearchEngines;
  return proto.service.SearchEngines.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.SearchEngines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.SearchEngines}
 */
proto.service.SearchEngines.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setYandex(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRosreestr(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGoogle(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOsm(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuickSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.SearchEngines.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.SearchEngines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.SearchEngines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.SearchEngines.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYandex();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRosreestr();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getGoogle();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getOsm();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQuickSearch();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bool yandex = 1;
 * @return {boolean}
 */
proto.service.SearchEngines.prototype.getYandex = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SearchEngines} returns this
 */
proto.service.SearchEngines.prototype.setYandex = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool rosreestr = 2;
 * @return {boolean}
 */
proto.service.SearchEngines.prototype.getRosreestr = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SearchEngines} returns this
 */
proto.service.SearchEngines.prototype.setRosreestr = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool google = 3;
 * @return {boolean}
 */
proto.service.SearchEngines.prototype.getGoogle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SearchEngines} returns this
 */
proto.service.SearchEngines.prototype.setGoogle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool osm = 4;
 * @return {boolean}
 */
proto.service.SearchEngines.prototype.getOsm = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SearchEngines} returns this
 */
proto.service.SearchEngines.prototype.setOsm = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool quick_search = 5;
 * @return {boolean}
 */
proto.service.SearchEngines.prototype.getQuickSearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.SearchEngines} returns this
 */
proto.service.SearchEngines.prototype.setQuickSearch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.ApplicationPart.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ApplicationPart.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ApplicationPart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ApplicationPart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ApplicationPart.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applicationGroupsList: jspb.Message.toObjectList(msg.getApplicationGroupsList(),
    proto.service.ApplicationGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ApplicationPart}
 */
proto.service.ApplicationPart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ApplicationPart;
  return proto.service.ApplicationPart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ApplicationPart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ApplicationPart}
 */
proto.service.ApplicationPart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = new proto.service.ApplicationGroup;
      reader.readMessage(value,proto.service.ApplicationGroup.deserializeBinaryFromReader);
      msg.addApplicationGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ApplicationPart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ApplicationPart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ApplicationPart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ApplicationPart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplicationGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.service.ApplicationGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.service.ApplicationPart.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationPart} returns this
 */
proto.service.ApplicationPart.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ApplicationGroup application_groups = 2;
 * @return {!Array<!proto.service.ApplicationGroup>}
 */
proto.service.ApplicationPart.prototype.getApplicationGroupsList = function() {
  return /** @type{!Array<!proto.service.ApplicationGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ApplicationGroup, 2));
};


/**
 * @param {!Array<!proto.service.ApplicationGroup>} value
 * @return {!proto.service.ApplicationPart} returns this
*/
proto.service.ApplicationPart.prototype.setApplicationGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.service.ApplicationGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ApplicationGroup}
 */
proto.service.ApplicationPart.prototype.addApplicationGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.service.ApplicationGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ApplicationPart} returns this
 */
proto.service.ApplicationPart.prototype.clearApplicationGroupsList = function() {
  return this.setApplicationGroupsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.ApplicationGroup.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ApplicationGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ApplicationGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ApplicationGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ApplicationGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applicationModulesList: jspb.Message.toObjectList(msg.getApplicationModulesList(),
    proto.service.ApplicationModule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ApplicationGroup}
 */
proto.service.ApplicationGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ApplicationGroup;
  return proto.service.ApplicationGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ApplicationGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ApplicationGroup}
 */
proto.service.ApplicationGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = new proto.service.ApplicationModule;
      reader.readMessage(value,proto.service.ApplicationModule.deserializeBinaryFromReader);
      msg.addApplicationModules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ApplicationGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ApplicationGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ApplicationGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ApplicationGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplicationModulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.service.ApplicationModule.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.ApplicationGroup.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationGroup} returns this
 */
proto.service.ApplicationGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.ApplicationGroup.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationGroup} returns this
 */
proto.service.ApplicationGroup.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ApplicationModule application_modules = 3;
 * @return {!Array<!proto.service.ApplicationModule>}
 */
proto.service.ApplicationGroup.prototype.getApplicationModulesList = function() {
  return /** @type{!Array<!proto.service.ApplicationModule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ApplicationModule, 3));
};


/**
 * @param {!Array<!proto.service.ApplicationModule>} value
 * @return {!proto.service.ApplicationGroup} returns this
*/
proto.service.ApplicationGroup.prototype.setApplicationModulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.service.ApplicationModule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ApplicationModule}
 */
proto.service.ApplicationGroup.prototype.addApplicationModules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.service.ApplicationModule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ApplicationGroup} returns this
 */
proto.service.ApplicationGroup.prototype.clearApplicationModulesList = function() {
  return this.setApplicationModulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ApplicationModule.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ApplicationModule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ApplicationModule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ApplicationModule.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    css: jspb.Message.getFieldWithDefault(msg, 3, ""),
    initEvent: jspb.Message.getFieldWithDefault(msg, 4, ""),
    toCache: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    js: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ApplicationModule}
 */
proto.service.ApplicationModule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ApplicationModule;
  return proto.service.ApplicationModule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ApplicationModule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ApplicationModule}
 */
proto.service.ApplicationModule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCss(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitEvent(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setToCache(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setJs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ApplicationModule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ApplicationModule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ApplicationModule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ApplicationModule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCss();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInitEvent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getToCache();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getJs();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.ApplicationModule.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationModule} returns this
 */
proto.service.ApplicationModule.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.service.ApplicationModule.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationModule} returns this
 */
proto.service.ApplicationModule.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string css = 3;
 * @return {string}
 */
proto.service.ApplicationModule.prototype.getCss = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationModule} returns this
 */
proto.service.ApplicationModule.prototype.setCss = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string init_event = 4;
 * @return {string}
 */
proto.service.ApplicationModule.prototype.getInitEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationModule} returns this
 */
proto.service.ApplicationModule.prototype.setInitEvent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool to_cache = 5;
 * @return {boolean}
 */
proto.service.ApplicationModule.prototype.getToCache = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.ApplicationModule} returns this
 */
proto.service.ApplicationModule.prototype.setToCache = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string js = 6;
 * @return {string}
 */
proto.service.ApplicationModule.prototype.getJs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ApplicationModule} returns this
 */
proto.service.ApplicationModule.prototype.setJs = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.ThemeLayerDescriptions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeLayerDescriptions.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeLayerDescriptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeLayerDescriptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayerDescriptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    themeLayerDescriptionsList: jspb.Message.toObjectList(msg.getThemeLayerDescriptionsList(),
    proto.service.ThemeLayerDescription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeLayerDescriptions}
 */
proto.service.ThemeLayerDescriptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeLayerDescriptions;
  return proto.service.ThemeLayerDescriptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeLayerDescriptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeLayerDescriptions}
 */
proto.service.ThemeLayerDescriptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.ThemeLayerDescription;
      reader.readMessage(value,proto.service.ThemeLayerDescription.deserializeBinaryFromReader);
      msg.addThemeLayerDescriptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeLayerDescriptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeLayerDescriptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeLayerDescriptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayerDescriptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThemeLayerDescriptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.service.ThemeLayerDescription.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThemeLayerDescription theme_layer_descriptions = 1;
 * @return {!Array<!proto.service.ThemeLayerDescription>}
 */
proto.service.ThemeLayerDescriptions.prototype.getThemeLayerDescriptionsList = function() {
  return /** @type{!Array<!proto.service.ThemeLayerDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ThemeLayerDescription, 1));
};


/**
 * @param {!Array<!proto.service.ThemeLayerDescription>} value
 * @return {!proto.service.ThemeLayerDescriptions} returns this
*/
proto.service.ThemeLayerDescriptions.prototype.setThemeLayerDescriptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.service.ThemeLayerDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ThemeLayerDescription}
 */
proto.service.ThemeLayerDescriptions.prototype.addThemeLayerDescriptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.service.ThemeLayerDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ThemeLayerDescriptions} returns this
 */
proto.service.ThemeLayerDescriptions.prototype.clearThemeLayerDescriptionsList = function() {
  return this.setThemeLayerDescriptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeLayerDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeLayerDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeLayerDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayerDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    themeId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    themeName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    themeDescription: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeLayerDescription}
 */
proto.service.ThemeLayerDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeLayerDescription;
  return proto.service.ThemeLayerDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeLayerDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeLayerDescription}
 */
proto.service.ThemeLayerDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeLayerDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeLayerDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeLayerDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayerDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThemeId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getThemeName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getThemeDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.service.ThemeLayerDescription.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayerDescription} returns this
 */
proto.service.ThemeLayerDescription.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project_name = 2;
 * @return {string}
 */
proto.service.ThemeLayerDescription.prototype.getProjectName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayerDescription} returns this
 */
proto.service.ThemeLayerDescription.prototype.setProjectName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string theme_id = 3;
 * @return {string}
 */
proto.service.ThemeLayerDescription.prototype.getThemeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayerDescription} returns this
 */
proto.service.ThemeLayerDescription.prototype.setThemeId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string theme_name = 4;
 * @return {string}
 */
proto.service.ThemeLayerDescription.prototype.getThemeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayerDescription} returns this
 */
proto.service.ThemeLayerDescription.prototype.setThemeName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string theme_description = 5;
 * @return {string}
 */
proto.service.ThemeLayerDescription.prototype.getThemeDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayerDescription} returns this
 */
proto.service.ThemeLayerDescription.prototype.setThemeDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.ThemeLayers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeLayers.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeLayers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeLayers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayers.toObject = function(includeInstance, msg) {
  var f, obj = {
    themeLayersList: jspb.Message.toObjectList(msg.getThemeLayersList(),
    proto.service.ThemeLayerResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeLayers}
 */
proto.service.ThemeLayers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeLayers;
  return proto.service.ThemeLayers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeLayers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeLayers}
 */
proto.service.ThemeLayers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.ThemeLayerResponse;
      reader.readMessage(value,proto.service.ThemeLayerResponse.deserializeBinaryFromReader);
      msg.addThemeLayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeLayers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeLayers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeLayers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThemeLayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.service.ThemeLayerResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThemeLayerResponse theme_layers = 1;
 * @return {!Array<!proto.service.ThemeLayerResponse>}
 */
proto.service.ThemeLayers.prototype.getThemeLayersList = function() {
  return /** @type{!Array<!proto.service.ThemeLayerResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.service.ThemeLayerResponse, 1));
};


/**
 * @param {!Array<!proto.service.ThemeLayerResponse>} value
 * @return {!proto.service.ThemeLayers} returns this
*/
proto.service.ThemeLayers.prototype.setThemeLayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.service.ThemeLayerResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.service.ThemeLayerResponse}
 */
proto.service.ThemeLayers.prototype.addThemeLayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.service.ThemeLayerResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.ThemeLayers} returns this
 */
proto.service.ThemeLayers.prototype.clearThemeLayersList = function() {
  return this.setThemeLayersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ThemeLayerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ThemeLayerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ThemeLayerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    themeLayer: (f = msg.getThemeLayer()) && proto.service.ThemeLayer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ThemeLayerResponse}
 */
proto.service.ThemeLayerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ThemeLayerResponse;
  return proto.service.ThemeLayerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ThemeLayerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ThemeLayerResponse}
 */
proto.service.ThemeLayerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectName(value);
      break;
    case 2:
      var value = new proto.service.ThemeLayer;
      reader.readMessage(value,proto.service.ThemeLayer.deserializeBinaryFromReader);
      msg.setThemeLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ThemeLayerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ThemeLayerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ThemeLayerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ThemeLayerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeLayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.service.ThemeLayer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string project_name = 1;
 * @return {string}
 */
proto.service.ThemeLayerResponse.prototype.getProjectName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ThemeLayerResponse} returns this
 */
proto.service.ThemeLayerResponse.prototype.setProjectName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ThemeLayer theme_layer = 2;
 * @return {?proto.service.ThemeLayer}
 */
proto.service.ThemeLayerResponse.prototype.getThemeLayer = function() {
  return /** @type{?proto.service.ThemeLayer} */ (
    jspb.Message.getWrapperField(this, proto.service.ThemeLayer, 2));
};


/**
 * @param {?proto.service.ThemeLayer|undefined} value
 * @return {!proto.service.ThemeLayerResponse} returns this
*/
proto.service.ThemeLayerResponse.prototype.setThemeLayer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.ThemeLayerResponse} returns this
 */
proto.service.ThemeLayerResponse.prototype.clearThemeLayer = function() {
  return this.setThemeLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.ThemeLayerResponse.prototype.hasThemeLayer = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.ProjectThemeLayerId.prototype.toObject = function(opt_includeInstance) {
  return proto.service.ProjectThemeLayerId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.ProjectThemeLayerId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ProjectThemeLayerId.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    themeLayerId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.ProjectThemeLayerId}
 */
proto.service.ProjectThemeLayerId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.ProjectThemeLayerId;
  return proto.service.ProjectThemeLayerId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.ProjectThemeLayerId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.ProjectThemeLayerId}
 */
proto.service.ProjectThemeLayerId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeLayerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.ProjectThemeLayerId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.ProjectThemeLayerId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.ProjectThemeLayerId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.ProjectThemeLayerId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeLayerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.service.ProjectThemeLayerId.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ProjectThemeLayerId} returns this
 */
proto.service.ProjectThemeLayerId.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_layer_id = 2;
 * @return {string}
 */
proto.service.ProjectThemeLayerId.prototype.getThemeLayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.ProjectThemeLayerId} returns this
 */
proto.service.ProjectThemeLayerId.prototype.setThemeLayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.OldProject.prototype.toObject = function(opt_includeInstance) {
  return proto.service.OldProject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.OldProject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.OldProject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    project: jspb.Message.getFieldWithDefault(msg, 3, ""),
    locale: jspb.Message.getFieldWithDefault(msg, 4, ""),
    analytics: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isDefault: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isInvalid: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isTemplate: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    hasApi: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    index: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.OldProject}
 */
proto.service.OldProject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.OldProject;
  return proto.service.OldProject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.OldProject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.OldProject}
 */
proto.service.OldProject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnalytics(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDefault(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInvalid(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTemplate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasApi(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.OldProject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.OldProject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.OldProject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.OldProject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAnalytics();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsDefault();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsInvalid();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsTemplate();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getHasApi();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.service.OldProject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.service.OldProject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string project = 3;
 * @return {string}
 */
proto.service.OldProject.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string locale = 4;
 * @return {string}
 */
proto.service.OldProject.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setLocale = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string analytics = 5;
 * @return {string}
 */
proto.service.OldProject.prototype.getAnalytics = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setAnalytics = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_default = 6;
 * @return {boolean}
 */
proto.service.OldProject.prototype.getIsDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setIsDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_invalid = 7;
 * @return {boolean}
 */
proto.service.OldProject.prototype.getIsInvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setIsInvalid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_template = 8;
 * @return {boolean}
 */
proto.service.OldProject.prototype.getIsTemplate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setIsTemplate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool has_api = 9;
 * @return {boolean}
 */
proto.service.OldProject.prototype.getHasApi = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setHasApi = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int64 index = 10;
 * @return {number}
 */
proto.service.OldProject.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.OldProject} returns this
 */
proto.service.OldProject.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


goog.object.extend(exports, proto.service);
